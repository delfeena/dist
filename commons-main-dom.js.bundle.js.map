{"version":3,"file":"commons-main-dom.js.bundle.js","mappings":"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","sources":["webpack://Filmcave/./node_modules/@xmldom/xmldom/lib/dom.js"],"sourcesContent":["var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n"],"names":["conventions","find","NAMESPACE","notEmptyString","input","orderedSetReducer","current","element","hasOwnProperty","toOrderedSet","list","split","filter","splitOnASCIIWhitespace","Object","keys","reduce","copy","src","dest","p","prototype","call","_extends","Class","Super","pt","t","constructor","console","error","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","code","message","Error","this","captureStackTrace","NodeList","LiveNodeList","node","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","length","$$length","i","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","ownerElement","doc","_onRemoveAttribute","ns","namespaceURI","XMLNS","_nsMap","prefix","localName","value","_onAddAttribute","_removeNamedNode","attr","tagName","lastIndex","DOMImplementation","Node","_xmlEncoder","c","charCodeAt","_visitNode","callback","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","parentNode","previous","previousSibling","next","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","indexOf","isElementReplacementPossible","assertPreInsertionValidity1to5","parent","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","uri","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","isHTML","XML","addSerializedAttribute","qualifiedName","push","replace","attrs","attributes","len","nodeName","prefixedNodeName","defaultNS","ai","item","name","nsi","test","data","slice","pubid","publicId","sysid","systemId","sub","internalSubset","target","importNode","deep","node2","cloneNode","appendChild","n","v","attrs2","_ownerElement","setAttributeNode","object","key","index","toString","predicate","Array","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","createDocument","doctype","implementation","root","createElementNS","createDocumentType","nodeValue","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","normalize","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createTextNode","createComment","createCDATASection","createProcessingInstruction","createAttribute","specified","createEntityReference","pl","createAttributeNS","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","get","set","String","e","exports"],"sourceRoot":""}