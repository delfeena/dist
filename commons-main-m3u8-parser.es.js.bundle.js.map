{"version":3,"file":"commons-main-m3u8-parser.es.js.bundle.js","mappings":"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","sources":["webpack://Filmcave/./node_modules/m3u8-parser/dist/m3u8-parser.es.js"],"sourcesContent":["/*! @name m3u8-parser @version 4.8.0 @license Apache-2.0 */\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\nvar TAB = String.fromCharCode(0x09);\n\nvar parseByterange = function parseByterange(byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  var result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\nvar camelCase = function camelCase(str) {\n  return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n    return a[1].toUpperCase();\n  });\n};\n\nvar camelCaseKeys = function camelCaseKeys(attributes) {\n  var result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nvar setHoldBack = function setHoldBack(manifest) {\n  var serverControl = manifest.serverControl,\n      targetDuration = manifest.targetDuration,\n      partTargetDuration = manifest.partTargetDuration;\n\n  if (!serverControl) {\n    return;\n  }\n\n  var tag = '#EXT-X-SERVER-CONTROL';\n  var hb = 'holdBack';\n  var phb = 'partHoldBack';\n  var minTargetDuration = targetDuration && targetDuration * 3;\n  var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = /*#__PURE__*/function (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_this);\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var hasParts = false;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    var lastPartByterangeEnd = 0;\n\n    _this.on('end', function () {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && _key) {\n        currentUri.key = _key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      _this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            version: function version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (_key) {\n                currentMap.key = _key;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            },\n            'skip': function skip() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n            'part': function part() {\n              var _this2 = this;\n\n              hasParts = true; // parts are always specifed before a segment\n\n              var segmentIndex = this.manifest.segments.length;\n              var part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              var partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach(function (r, i) {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    _this2.trigger('warn', {\n                      message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                    });\n                  }\n                });\n              }\n            },\n            'server-control': function serverControl() {\n              var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n            'preload-hint': function preloadHint() {\n              // parts are always specifed before a segment\n              var segmentIndex = this.manifest.segments.length;\n              var hint = camelCaseKeys(entry.attributes);\n              var isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              var index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                var otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                  });\n                }\n              }\n            },\n            'rendition-report': function renditionReport() {\n              var report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              var index = this.manifest.renditionReports.length - 1;\n              var required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n            },\n            'part-inf': function partInf() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n    var missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n  ;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n  ;\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n  ;\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n  ;\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\nexport { LineStream, ParseStream, Parser };\n"],"names":["LineStream","_Stream","_this","call","this","buffer","prototype","push","data","nextNewline","indexOf","trigger","substring","TAB","String","fromCharCode","parseByterange","byterangeString","match","exec","result","length","parseInt","offset","parseAttributes","attributes","attr","attrs","split","RegExp","i","slice","replace","ParseStream","customParsers","tagMappers","_proto","line","event","_this2","trim","reduce","acc","mapper","mappedLine","concat","forEach","newLine","type","tagType","duration","parseFloat","title","version","number","playlistType","allowed","test","URI","uri","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","toLowerCase","Uint32Array","PRECISE","hasOwnProperty","key","subkey","text","addParser","_ref","_this3","expression","customType","dataParser","segment","addTagMapper","_ref2","map","camelCaseKeys","Object","keys","str","a","toUpperCase","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","message","Parser","lineStream","parseStream","pipe","currentMap","_key","self","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","on","parts","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","method","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","start","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","part","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","index","otherHint","report","required","partInf","partTarget","comment","custom","identifier","missing","join","chunk","end","options"],"sourceRoot":""}