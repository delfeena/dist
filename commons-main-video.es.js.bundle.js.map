{"version":3,"file":"commons-main-video.es.js.bundle.js","mappings":"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","sources":["webpack://Filmcave/./node_modules/video.js/dist/video.es.js"],"sourcesContent":["/**\n * @license\n * Video.js 7.21.5 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport keycode from 'keycode';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { browserSupportsCodec, DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, muxerSupportsCodec, parseCodecs, translateLegacyCodec, codecsFromDefault, getMimeForCodec, isAudioCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\n\nvar version$5 = \"7.21.5\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nvar hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvar hooks = function hooks(type, fn) {\n  hooks_[type] = hooks_[type] || [];\n\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n\n  return hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvar hook = function hook(type, fn) {\n  hooks(type, fn);\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvar removeHook = function removeHook(type, fn) {\n  var index = hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvar hookOnce = function hookOnce(type, fn) {\n  hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger$1(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log$1 = createLogger$1('VIDEOJS');\nvar createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue;\n\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n  var left = 0;\n  var top = 0;\n\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var translated = {\n    x: 0,\n    y: 0\n  };\n\n  if (IS_IOS) {\n    var item = el;\n\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      var transform = computedStyle(item, 'transform');\n\n      if (/^matrix/.test(transform)) {\n        var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n        translated.x += _values[12];\n        translated.y += _values[13];\n      }\n\n      item = item.parentNode;\n    }\n  }\n\n  var position = {};\n  var boxTarget = findPosition(event.target);\n  var box = findPosition(el);\n  var boxW = box.width;\n  var boxH = box.height;\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$1;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log$1('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget$2 = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget$2.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget$2.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget$2.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget$2.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget$2.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget$2.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget$2.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    map[\"delete\"](type); // if we cleared out all timeouts for the current target, delete its map\n\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\nvar objName = function objName(obj) {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n\n  if (obj.name_) {\n    return obj.name_;\n  }\n\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n\n  return typeof obj;\n};\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateTarget = function validateTarget(target, obj, fnName) {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateEventType = function validateEventType(type, obj, fnName) {\n  if (!isValidEventType(type)) {\n    throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateListener = function validateListener(listener, obj, fnName) {\n  if (typeof listener !== 'function') {\n    throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target, target, method);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    var type = event && typeof event !== 'string' ? event.type : event;\n\n    if (!isValidEventType(type)) {\n      var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n      if (event) {\n        (this.log || log$1).error(error);\n      } else {\n        throw new Error(error);\n      }\n    }\n\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData[\"delete\"](val);\n      }\n    });\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase$1 = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions$3() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions$3(result[key], value);\n    });\n  });\n  return result;\n}\n\nvar MapSham = /*#__PURE__*/function () {\n  function MapSham() {\n    this.map_ = {};\n  }\n\n  var _proto = MapSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.map_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.map_[key];\n    return has;\n  };\n\n  _proto.set = function set(key, value) {\n    this.map_[key] = value;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.map_) {\n      callback.call(thisArg, this.map_[key], key, this);\n    }\n  };\n\n  return MapSham;\n}();\n\nvar Map$1 = window$1.Map ? window$1.Map : MapSham;\n\nvar SetSham = /*#__PURE__*/function () {\n  function SetSham() {\n    this.set_ = {};\n  }\n\n  var _proto = SetSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.set_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.set_[key];\n    return has;\n  };\n\n  _proto.add = function add(key) {\n    this.set_[key] = 1;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.set_) {\n      callback.call(thisArg, key, key, this);\n    }\n  };\n\n  return SetSham;\n}();\n\nvar Set$1 = window$1.Set ? window$1.Set : SetSham;\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component$1 = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    var _this = this;\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(function (c) {\n        return _this.addClass(c);\n      });\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set$1();\n    this.setIntervalIds_ = new Set$1();\n    this.rafIds_ = new Set$1();\n    this.namedRafs_ = new Map$1();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    } // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n\n\n    this.ready(ready);\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions$3(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {}\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    }\n\n    // flatten array argument into the main array\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this2 = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this2.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this2.addChild(name, opts);\n\n        if (newChild) {\n          _this2[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this2.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this3 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this3.setTimeoutIds_.has(timeoutId)) {\n        _this3.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this4.rafIds_.has(id)) {\n        _this4.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  ;\n\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n    var _this5 = this;\n\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.clearTimersOnDispose_();\n    fn = bind(this, fn);\n    var id = this.requestAnimationFrame(function () {\n      fn();\n\n      if (_this5.namedRafs_.has(name)) {\n        _this5.namedRafs_[\"delete\"](name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  ;\n\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_[\"delete\"](name);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this6 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        _this6[idName].forEach(function (val, key) {\n          return _this6[cancelName](key);\n        });\n      });\n      _this6.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase$1(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent$1.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  var timeRangesObj;\n\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = function () {\n      return (ranges || []).values();\n    };\n  }\n\n  return timeRangesObj;\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.close_ = function (e) {\n      return _this.close(e);\n    };\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown_);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component$1);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n\n\n    track.labelchange_ = function () {\n      _this2.trigger({\n        track: track,\n        type: 'labelchange',\n        target: _this2\n      });\n    };\n\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget$2);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    var label = options.label || '';\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n\n\n    Object.defineProperty(_assertThisInitialized(_this), 'label', {\n      get: function get() {\n        return label;\n      },\n      set: function set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('labelchange');\n        }\n      }\n    });\n    return _this;\n  }\n\n  return Track;\n}(EventTarget$2);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n  /* istanbul ignore if */\n\n\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    // add the url to an anchor and let the browser parse the URL\n    var a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    _this.timeupdateHandler = bind(_assertThisInitialized(_this), function (event) {\n      if (event === void 0) {\n        event = {};\n      }\n\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n\n        return;\n      } // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n\n    var disposeHandler = function disposeHandler() {\n      _this.stopTracking();\n    };\n\n    _this.tech_.one('dispose', disposeHandler);\n\n    if (mode !== 'disabled') {\n      _this.startTracking();\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          if (mode === newMode) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          this.stopTracking();\n\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrack.prototype;\n\n  _proto.startTracking = function startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler); // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  };\n\n  _proto.stopTracking = function stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  ;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (cue.constructor && cue.constructor.name !== 'VTTCue') {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget$2);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this;\n\n    _this.onDurationChange_ = function (e) {\n      return _this.onDurationChange(e);\n    };\n\n    _this.trackProgress_ = function (e) {\n      return _this.trackProgress(e);\n    };\n\n    _this.trackCurrentTime_ = function (e) {\n      return _this.trackCurrentTime(e);\n    };\n\n    _this.stopTrackingCurrentTime_ = function (e) {\n      return _this.stopTrackingCurrentTime(e);\n    };\n\n    _this.disposeSourceHandler_ = function (e) {\n      return _this.disposeSourceHandler(e);\n    };\n\n    _this.queuedHanders_ = new Set(); // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin() {}\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  ;\n\n  _proto.setCrossOrigin = function setCrossOrigin() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  ;\n\n  _proto.play = function play() {}\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing() {}\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {}\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions$3(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\n    return true;\n  }\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  ;\n\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n    var _this8 = this;\n\n    var id = newGUID();\n\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', function () {\n        if (_this8.queuedHanders_.has(id)) {\n          _this8.queuedHanders_[\"delete\"](id);\n\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n\n    return id;\n  }\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  ;\n\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_[\"delete\"](id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase$1(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVideoFrameCallback = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase$1(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions$3({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase$1(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component$1);\n\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (_this.options_.controlText) {\n      _this.controlText(_this.options_.controlText);\n    }\n\n    _this.handleMouseOver_ = function (e) {\n      return _this.handleMouseOver(e);\n    };\n\n    _this.handleMouseOut_ = function (e) {\n      return _this.handleMouseOut(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    var el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component$1);\n\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    };\n\n    player.on('posterchange', _this.update_);\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update_);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent$1.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n\n    var updateDisplayHandler = function updateDisplayHandler(e) {\n      return _this.updateDisplay(e);\n    };\n\n    player.on('loadstart', function (e) {\n      return _this.toggleDisplay(e);\n    });\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', function (e) {\n      return _this.preselectTrack(e);\n    }); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n        if (_track2.language) {\n          setAttribute(cueEl, 'lang', _track2.language);\n        }\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component$1);\n\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl$1(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = createEl(tag, props, attributes);\n\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent$1.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', function (e) {\n      return _this.handlePlay(e);\n    });\n\n    _this.on(player, 'pause', function (e) {\n      return _this.handlePause(e);\n    });\n\n    if (options.replay) {\n      _this.on(player, 'ended', function (e) {\n        return _this.handleEnded(e);\n      });\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    var _this2 = this;\n\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', function (e) {\n      return _this2.handleSeeked(e);\n    });\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], function (e) {\n      return _this.updateContent(e);\n    });\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\"\n    });\n\n    var span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize(this.labelText_) + \"\\xA0\"\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n\n      if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component$1);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    var updateContent = function updateContent(e) {\n      return _this.updateContent(e);\n    }; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n\n    _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n\n    var div = _Component.prototype.createEl.call(this, 'div');\n\n    var span = _Component.prototype.createEl.call(this, 'span', {\n      textContent: '/'\n    });\n\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  };\n\n  return TimeDivider;\n}(Component$1);\n\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', function (e) {\n      return _this.updateContent(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', function (e) {\n      return _this.updateShowing(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('Stream Type') + \"\\xA0\"\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.updateLiveEdgeStatusHandler_ = function (e) {\n        return _this.updateLiveEdgeStatus(e);\n      };\n\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleMouseDown_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.handleMouseUp_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMouseMove_ = function (e) {\n      return _this.handleMouseMove(e);\n    };\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    }; // Set property names to bar to match with the child Slider class is looking for\n\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this;\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component$1);\n\nComponent$1.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component$1);\n\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = findPosition(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    } // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n\n\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component$1);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component$1);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n\n    this.enableIntervalHandler_ = function (e) {\n      return _this2.enableInterval_(e);\n    };\n\n    this.disableIntervalHandler_ = function (e) {\n      return _this2.disableInterval_(e);\n    };\n\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this3 = this;\n\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\n      var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n      var liveTracker = _this3.player_.liveTracker;\n\n      var duration = _this3.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this3.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this3.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this3.percent_ = percent;\n      }\n\n      if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this3.currentTime_ = currentTime;\n        _this3.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this3.bar) {\n        _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  ;\n\n  _proto.userSeek_ = function userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n\n    this.player_.currentTime(ct);\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event, mouseDown) {\n    if (mouseDown === void 0) {\n      mouseDown = false;\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.userSeek_(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var liveTracker = this.player_.liveTracker;\n\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleMouseDownHandler_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = findPosition(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n    if (this.player_.scrubbing()) {\n      var seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  ;\n\n  _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  };\n\n  return ProgressControl;\n}(Component$1);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n      return _this.handlePictureInPictureChange(e);\n    });\n\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n      return _this.handlePictureInPictureEnabledChange(e);\n    });\n\n    _this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], function () {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      var isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n\n        _this.hide();\n      } else {\n        _this.show();\n      }\n    }); // TODO: Deactivate button on player emptied event.\n\n\n    _this.disable();\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  ;\n\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n\n    this.handlePictureInPictureEnabledChange();\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', function (e) {\n      return _this.handleFullscreenChange(e);\n    });\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level'\n    });\n\n    el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  };\n\n  return VolumeLevel;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\n\nvar VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevelTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeLevelTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeLevelTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      var tooltipRect = getBoundingClientRect(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n\n      var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      var pullTooltipBy = tooltipRect.width / 2;\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    }\n\n    this.write(content + \"%\");\n  }\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n      _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return VolumeLevelTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\n\nvar MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseVolumeLevelDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseVolumeLevelDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n    var _this2 = this;\n\n    var volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n      if (vertical) {\n        _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n      } else {\n        _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n      }\n    });\n  };\n\n  return MouseVolumeLevelDisplay;\n}(Component$1);\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', function (e) {\n      return _this.updateLastVolume_(e);\n    });\n\n    _this.on(player, 'volumechange', function (e) {\n      return _this.updateARIAAttributes(e);\n    });\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n    if (mouseVolumeLevelDisplay) {\n      var volumeBarEl = this.el();\n      var volumeBarRect = getBoundingClientRect(volumeBarEl);\n      var vertical = this.vertical();\n      var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n}; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('touchstart', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('mousemove', function (e) {\n      return _this.handleMouseMove(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n    _this.handleKeyPressHandler_ = function (e) {\n      return _this.handleKeyPress(e);\n    };\n\n    _this.on(player, ['loadstart'], function (e) {\n      return _this.volumePanelState_(e);\n    });\n\n    _this.on(_this.muteToggle, 'keyup', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on(_this.volumeControl, 'keyup', function (e) {\n      return _this.handleVolumeControlKeyUp(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on('mouseover', function (e) {\n      return _this.handleMouseOver(e);\n    });\n\n    _this.on('mouseout', function (e) {\n      return _this.handleMouseOut(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = function (e) {\n      return _this.handleBlur(e);\n    };\n\n    _this.boundHandleTapClick_ = function (e) {\n      return _this.handleTapClick(e);\n    };\n\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component$1);\n\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    var handleClick = function handleClick(e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMenuKeyUp_ = function (e) {\n      return _this.handleMenuKeyUp(e);\n    };\n\n    _this.on(_this.menuButton_, 'tap', handleClick);\n\n    _this.on(_this.menuButton_, 'click', handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', _this.handleMenuKeyUp_);\n    });\n\n    _this.on('mouseleave', function (e) {\n      return _this.handleMouseLeave(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleSubmenuKeyDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      var titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component$1);\n\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs); // swap icon with menu item text.\n\n\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n\n    _this.selectCurrentItem_ = function () {\n      _this.items.forEach(function (item) {\n        item.selected(_this.track_.activeCues[0] === item.cue);\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n\n    var track = this.findChaptersTrack();\n\n    if (track !== this.track_) {\n      this.setTrack(track);\n\n      _TextTrackButton.prototype.update.call(this);\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      _TextTrackButton.prototype.update.call(this);\n    }\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: \" \" + this.localize('Captions')\n      }));\n    }\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n    // off for us.\n\n\n    this.track.enabled = true; // when native audio tracks are used, we want to make sure that other tracks are turned off\n\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // skip the current track since we enabled it above\n\n        if (track === this.track) {\n          continue;\n        }\n\n        track.enabled = track === this.track;\n      }\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', function (e) {\n      return _this.updateVisibility(e);\n    });\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.updateLabel(e);\n    });\n\n    _this.on(player, 'playbackrateschange', function (e) {\n      return _this.handlePlaybackRateschange(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var rates = this.playbackRates();\n    var items = [];\n\n    for (var i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n\n    return items;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n    var currentIndex = rates.indexOf(currentRate); // this get the next rate and it will select first one if the last one currently selected\n\n    var newIndex = (currentIndex + 1) % rates.length;\n    this.player().playbackRate(rates[newIndex]);\n  }\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  ;\n\n  _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n    this.update();\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    var player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n\n    return _Component.prototype.createEl.call(this, tag, props, attributes);\n  };\n\n  return Spacer;\n}(Component$1);\n\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Spacer.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: \"\\xA0\"\n    });\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component$1);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', function (e) {\n      return _this.open(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = _this.updateDisplay.bind(_assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions$3({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component$1);\n\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nvar defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions$3(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.handleVisibilityChange_ = function (e) {\n      return _this.handleVisibilityChange(e);\n    };\n\n    _this.trackLiveHandler_ = function () {\n      return _this.trackLive_();\n    };\n\n    _this.handlePlay_ = function (e) {\n      return _this.handlePlay(e);\n    };\n\n    _this.handleFirstTimeupdate_ = function (e) {\n      return _this.handleFirstTimeupdate(e);\n    };\n\n    _this.handleSeeked_ = function (e) {\n      return _this.handleSeeked(e);\n    };\n\n    _this.seekToLiveEdge_ = function (e) {\n      return _this.seekToLiveEdge(e);\n    };\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', function (e) {\n      return _this.handleDurationchange(e);\n    }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n\n\n    _this.on(_this.player_, 'canplay', function () {\n      return _this.toggleTracking();\n    }); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window$1.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    this.toggleTracking();\n  }\n  /**\n   * start/stop tracking\n   */\n  ;\n\n  _proto.toggleTracking = function toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  ;\n\n  _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component$1);\n\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false;\n    _this.featuresVideoFrameCallback = _this.featuresVideoFrameCallback && _this.el_.tagName === 'VIDEO'; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    _this.isScrubbing_ = false;\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions$3({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {\n    return this.isScrubbing_;\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      }); // Safari will sometimes set contols on the videoelement when existing fullscreen.\n\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  ;\n\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n\n    return _Tech.prototype.requestVideoFrameCallback.call(this, cb);\n  }\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  ;\n\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      _Tech.prototype.cancelVideoFrameCallback.call(this, id);\n    }\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    var canControl = volume !== Html5.TEST_VID.volume; // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(function () {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      }); // default iOS to false, which will be updated in the timeout above.\n\n      return false;\n    }\n\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\n\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = function (e) {\n      return _this.documentFullscreenChange_(e);\n    };\n\n    _this.boundFullWindowOnEscKey_ = function (e) {\n      return _this.fullWindowOnEscKey(e);\n    };\n\n    _this.boundUpdateStyleEl_ = function (e) {\n      return _this.updateStyleEl_(e);\n    };\n\n    _this.boundApplyInitTime_ = function (e) {\n      return _this.applyInitTime_(e);\n    };\n\n    _this.boundUpdateCurrentBreakpoint_ = function (e) {\n      return _this.updateCurrentBreakpoint_(e);\n    };\n\n    _this.boundHandleTechClick_ = function (e) {\n      return _this.handleTechClick_(e);\n    };\n\n    _this.boundHandleTechDoubleClick_ = function (e) {\n      return _this.handleTechDoubleClick_(e);\n    };\n\n    _this.boundHandleTechTouchStart_ = function (e) {\n      return _this.handleTechTouchStart_(e);\n    };\n\n    _this.boundHandleTechTouchMove_ = function (e) {\n      return _this.handleTechTouchMove_(e);\n    };\n\n    _this.boundHandleTechTouchEnd_ = function (e) {\n      return _this.handleTechTouchEnd_(e);\n    };\n\n    _this.boundHandleTechTap_ = function (e) {\n      return _this.handleTechTap_(e);\n    }; // default isFullscreen_ to false\n\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // Init debugEnabled_\n\n    _this.debugEnabled_ = false; // Init state audioOnlyMode_\n\n    _this.audioOnlyMode_ = false; // Init state audioPosterMode_\n\n    _this.audioPosterMode_ = false; // Init state audioOnlyCache_\n\n    _this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    }; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    } // Enable debug mode to fire debugon event for all plugins.\n\n\n    if (options.debug) {\n      _this.debug(true);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.playbackRates(options.playbackRates);\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version$5.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', function (e) {\n      return _this.listenForUserActivity_(e);\n    });\n\n    _this.on('stageclick', function (e) {\n      return _this.handleStageClick_(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on('languagechange', function (e) {\n      return _this.handleLanguagechange(e);\n    });\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive); // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n\n\n    _this.on('ready', function () {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      _this.audioPosterMode(_this.options_.audioPosterMode);\n\n      _this.audioOnlyMode(_this.options_.audioOnlyMode);\n    });\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here, or replaced if\n\n    _Component.prototype.dispose.call(this, {\n      restoreEl: this.options_.restoreEl\n    });\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    var _this3 = this;\n\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, function () {\n        _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this4 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase$1(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false;\n    var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this4[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (e) {\n        return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n      });\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (eventObj) {\n        if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n          _this4.queuedCallbacks_.push({\n            callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', function (e) {\n      return _this4.handleTechLoadStart_(e);\n    });\n    this.on(this.tech_, 'sourceset', function (e) {\n      return _this4.handleTechSourceset_(e);\n    });\n    this.on(this.tech_, 'waiting', function (e) {\n      return _this4.handleTechWaiting_(e);\n    });\n    this.on(this.tech_, 'ended', function (e) {\n      return _this4.handleTechEnded_(e);\n    });\n    this.on(this.tech_, 'seeking', function (e) {\n      return _this4.handleTechSeeking_(e);\n    });\n    this.on(this.tech_, 'play', function (e) {\n      return _this4.handleTechPlay_(e);\n    });\n    this.on(this.tech_, 'firstplay', function (e) {\n      return _this4.handleTechFirstPlay_(e);\n    });\n    this.on(this.tech_, 'pause', function (e) {\n      return _this4.handleTechPause_(e);\n    });\n    this.on(this.tech_, 'durationchange', function (e) {\n      return _this4.handleTechDurationChange_(e);\n    });\n    this.on(this.tech_, 'fullscreenchange', function (e, data) {\n      return _this4.handleTechFullscreenChange_(e, data);\n    });\n    this.on(this.tech_, 'fullscreenerror', function (e, err) {\n      return _this4.handleTechFullscreenError_(e, err);\n    });\n    this.on(this.tech_, 'enterpictureinpicture', function (e) {\n      return _this4.handleTechEnterPictureInPicture_(e);\n    });\n    this.on(this.tech_, 'leavepictureinpicture', function (e) {\n      return _this4.handleTechLeavePictureInPicture_(e);\n    });\n    this.on(this.tech_, 'error', function (e) {\n      return _this4.handleTechError_(e);\n    });\n    this.on(this.tech_, 'posterchange', function (e) {\n      return _this4.handleTechPosterChange_(e);\n    });\n    this.on(this.tech_, 'textdata', function (e) {\n      return _this4.handleTechTextData_(e);\n    });\n    this.on(this.tech_, 'ratechange', function (e) {\n      return _this4.handleTechRateChange_(e);\n    });\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this5 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this5[props.privateName] = _this5[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this6 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    } // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n\n\n    var resolveMuted = function resolveMuted() {\n      var previouslyMuted = _this6.muted();\n\n      _this6.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this6.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this6.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this6.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](function (err) {\n        restoreMuted();\n        throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n      });\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this6.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function () {\n      _this6.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions$3({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this7 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this7.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the initial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this7.techGet('currentSrc');\n\n          _this7.lastSource_.tech = techSrc;\n\n          _this7.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this8 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this8.currentTime()) {\n        _this8.removeClass('vjs-waiting');\n\n        _this8.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    var _this9 = this;\n\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', function () {\n          _this9.removeClass('vjs-ios-native-fs');\n        });\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // TODO: Is this needed for techs other than Flash?\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log$1(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this10 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this10.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this11 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    var isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this11.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // For native playback, reset the progress bar if we get a play call from a replay.\n\n    var isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    } // play was terminated if the returned value is null\n\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      // TODO: Required for techs other than Flash?\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this12 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this12.isFullscreen(true);\n        }, function () {\n          return _this12.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this13 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(function () {\n          return _this13.isFullscreen(false);\n        }));\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this14 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this14.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n    var _this15 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // Reset retry behavior for new source\n\n\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    } // initial sources\n\n\n    this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this15.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      if (!isRetry) {\n        _this15.cache_.sources = sources;\n      }\n\n      _this15.updateSourceCaches_(middlewareSource);\n\n      var err = _this15.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this15.handleSrc_(sources.slice(1));\n        }\n\n        _this15.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this15.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this15.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this15.tech_);\n    }); // Try another available source if this one fails before playback.\n\n    if (this.options_.retryOnError && sources.length > 1) {\n      var retry = function retry() {\n        // Remove the error modal\n        _this15.error(null);\n\n        _this15.handleSrc_(sources.slice(1), true);\n      };\n\n      var stopListeningForErrors = function stopListeningForErrors() {\n        _this15.off('error', retry);\n      };\n\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n\n      this.resetRetryOnError_ = function () {\n        _this15.off('error', retry);\n\n        _this15.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    return this.handleSrc_(source, false);\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this16 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this16.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this17 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this17.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n\n    var _ref3 = this.controlBar || {},\n        durationDisplay = _ref3.durationDisplay,\n        remainingTimeDisplay = _ref3.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    var _this18 = this;\n\n    if (err === undefined) {\n      return this.error_ || null;\n    } // allow hooks to modify error object\n\n\n    hooks('beforeerror').forEach(function (hookFunction) {\n      var newErr = hookFunction(_this18, err);\n\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        _this18.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n        return;\n      }\n\n      err = newErr;\n    }); // Suppress the first error message for no compatible source until\n    // user interaction\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error'); // notify hooks of the per player error\n\n    hooks('error').forEach(function (hookFunction) {\n      return hookFunction(_this18, _this18.error_);\n    });\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  _proto.enableAudioOnlyUI_ = function enableAudioOnlyUI_() {\n    var _this19 = this;\n\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    var playerChildren = this.children();\n    var controlBar = this.getChild('ControlBar');\n    var controlBarHeight = controlBar && controlBar.currentHeight(); // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n\n    playerChildren.forEach(function (child) {\n      if (child === controlBar) {\n        return;\n      }\n\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n\n        _this19.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight(); // Set the player height the same as the control bar\n\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  };\n\n  _proto.disableAudioOnlyUI_ = function disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode'); // Show player components that were previously hidden\n\n    this.audioOnlyCache_.hiddenChildren.forEach(function (child) {\n      return child.show();\n    }); // Reset player height\n\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  ;\n\n  _proto.audioOnlyMode = function audioOnlyMode(value) {\n    var _this20 = this;\n\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n\n    this.audioOnlyMode_ = value;\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      // Enable Audio Only Mode\n      if (value) {\n        var exitPromises = []; // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n\n        if (this.isInPictureInPicture()) {\n          exitPromises.push(this.exitPictureInPicture());\n        }\n\n        if (this.isFullscreen()) {\n          exitPromises.push(this.exitFullscreen());\n        }\n\n        if (this.audioPosterMode()) {\n          exitPromises.push(this.audioPosterMode(false));\n        }\n\n        return PromiseClass.all(exitPromises).then(function () {\n          return _this20.enableAudioOnlyUI_();\n        });\n      } // Disable Audio Only Mode\n\n\n      return PromiseClass.resolve().then(function () {\n        return _this20.disableAudioOnlyUI_();\n      });\n    }\n\n    if (value) {\n      if (this.isInPictureInPicture()) {\n        this.exitPictureInPicture();\n      }\n\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      }\n\n      this.enableAudioOnlyUI_();\n    } else {\n      this.disableAudioOnlyUI_();\n    }\n  };\n\n  _proto.enablePosterModeUI_ = function enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    var tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  };\n\n  _proto.disablePosterModeUI_ = function disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    var tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  ;\n\n  _proto.audioPosterMode = function audioPosterMode(value) {\n    var _this21 = this;\n\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n\n    this.audioPosterMode_ = value;\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      if (value) {\n        if (this.audioOnlyMode()) {\n          var audioOnlyModePromise = this.audioOnlyMode(false);\n          return audioOnlyModePromise.then(function () {\n            // enable audio poster mode after audio only mode is disabled\n            _this21.enablePosterModeUI_();\n          });\n        }\n\n        return PromiseClass.resolve().then(function () {\n          // enable audio poster mode\n          _this21.enablePosterModeUI_();\n        });\n      }\n\n      return PromiseClass.resolve().then(function () {\n        // disable audio poster mode\n        _this21.disablePosterModeUI_();\n      });\n    }\n\n    if (value) {\n      if (this.audioOnlyMode()) {\n        this.audioOnlyMode(false);\n      }\n\n      this.enablePosterModeUI_();\n      return;\n    }\n\n    this.disablePosterModeUI_();\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions$3(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions$3(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this22 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this22.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this23 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions$3(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this23.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions$3(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  }\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  ;\n\n  _proto.debug = function debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    } // ignore any value that isn't an array\n\n\n    if (!Array.isArray(newRates)) {\n      return;\n    } // ignore any arrays that don't only contain numbers\n\n\n    if (!newRates.every(function (rate) {\n      return typeof rate === 'number';\n    })) {\n      return;\n    }\n\n    this.cache_.playbackRates = newRates;\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('playbackrateschange');\n  };\n\n  return Player;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    } // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\nvar hasLogged = false;\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @deprecated\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  // Log a warning the first time extend is called to note that it is deprecated\n  // It was previously deprecated in our documentation (guides, specifically),\n  // but was never formally deprecated in code.\n  if (!hasLogged) {\n    log$1.warn('videojs.extend is deprecated as of Video.js 7.22.0 and will be removed in Video.js 8.0.0');\n    hasLogged = true;\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {}; // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n\n  hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions$3(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions$3(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook; // Add default styles\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs.VERSION = version$5;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\n\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs.extend = extend;\nvideojs.mergeOptions = mergeOptions$3;\nvideojs.bind = bind;\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs.plugin = function (name, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\nvideojs.formatTime = formatTime;\nvideojs.setFormatTime = setFormatTime;\nvideojs.resetFormatTime = resetFormatTime;\nvideojs.parseUrl = parseUrl;\nvideojs.isCrossOrigin = isCrossOrigin;\nvideojs.EventTarget = EventTarget$2;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs.url = Url;\nvideojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n// In a major update this could become the default text and key.\n\nvideojs.addLanguage('en', {\n  'Non-Fullscreen': 'Exit Fullscreen'\n});\n\n/*! @name @videojs/http-streaming @version 2.16.2 @license Apache-2.0 */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = _resolveUrl;\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar logger = function logger(source) {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n  }\n\n  return function () {};\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\n\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return videojs.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n\n  count = bufferB.length;\n\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n  if (playbackRate === void 0) {\n    playbackRate = 1;\n  }\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\n\nvar isRangeDifferent = function isRangeDifferent(a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n\n  for (var i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n\n  return false;\n};\n\nvar lastBufferedEnd = function lastBufferedEnd(a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\n\nvar timeAheadOf = function timeAheadOf(range, startTime) {\n  var time = 0;\n\n  if (!range || !range.length) {\n    return time;\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    var start = range.start(i);\n    var end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n\n    time += end - start;\n  }\n\n  return time;\n};\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs.createTimeRange;\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nvar segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n\n  var result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\n\nvar getPartsAndSegments = function getPartsAndSegments(playlist) {\n  return (playlist.segments || []).reduce(function (acc, segment, si) {\n    if (segment.parts) {\n      segment.parts.forEach(function (part, pi) {\n        acc.push({\n          duration: part.duration,\n          segmentIndex: si,\n          partIndex: pi,\n          part: part,\n          segment: segment\n        });\n      });\n    } else {\n      acc.push({\n        duration: segment.duration,\n        segmentIndex: si,\n        partIndex: null,\n        segment: segment,\n        part: null\n      });\n    }\n\n    return acc;\n  }, []);\n};\n\nvar getLastParts = function getLastParts(media) {\n  var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\n\nvar getKnownPartCount = function getKnownPartCount(_ref) {\n  var preloadSegment = _ref.preloadSegment;\n\n  if (!preloadSegment) {\n    return;\n  }\n\n  var parts = preloadSegment.parts,\n      preloadHints = preloadSegment.preloadHints;\n  var partCount = (preloadHints || []).reduce(function (count, hint) {\n    return count + (hint.type === 'PART' ? 1 : 0);\n  }, 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} master the master playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\n\nvar liveEdgeDelay = function liveEdgeDelay(master, media) {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n\n  if (master && master.suggestedPresentationDelay) {\n    return master.suggestedPresentationDelay;\n  }\n\n  var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segmentDurationWithParts(playlist, segment);\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segmentDurationWithParts(playlist, segment);\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  var backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  var forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(_ref2) {\n  var defaultDuration = _ref2.defaultDuration,\n      durationList = _ref2.durationList,\n      startIndex = _ref2.startIndex,\n      endIndex = _ref2.endIndex;\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref3 = [endIndex, startIndex];\n    startIndex = _ref3[0];\n    endIndex = _ref3[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += durationList[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\n\nvar getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n  var playlist = _ref4.playlist,\n      currentTime = _ref4.currentTime,\n      startingSegmentIndex = _ref4.startingSegmentIndex,\n      startingPartIndex = _ref4.startingPartIndex,\n      startTime = _ref4.startTime,\n      experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n  var time = currentTime - startTime;\n  var partsAndSegments = getPartsAndSegments(playlist);\n  var startIndex = 0;\n\n  for (var i = 0; i < partsAndSegments.length; i++) {\n    var partAndSegment = partsAndSegments[i];\n\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n\n    startIndex = i;\n    break;\n  }\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n        var _partAndSegment = partsAndSegments[_i2];\n        time += _partAndSegment.duration;\n\n        if (experimentalExactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n\n        return {\n          partIndex: _partAndSegment.partIndex,\n          segmentIndex: _partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex: startIndex,\n            endIndex: _i2\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (var _i3 = startIndex; _i3 < 0; _i3++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n    var _partAndSegment2 = partsAndSegments[_i4];\n    time -= _partAndSegment2.duration;\n\n    if (experimentalExactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n\n    return {\n      partIndex: _partAndSegment2.partIndex,\n      segmentIndex: _partAndSegment2.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex: startIndex,\n        endIndex: _i4\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n  if (bytesReceived === void 0) {\n    bytesReceived = 0;\n  }\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\nvar playlistMatch = function playlistMatch(a, b) {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n\n  return false;\n};\n\nvar someAudioVariant = function someAudioVariant(master, callback) {\n  var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n  var found = false;\n\n  for (var groupName in AUDIO) {\n    for (var label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n\n      if (found) {\n        break;\n      }\n    }\n\n    if (found) {\n      break;\n    }\n  }\n\n  return !!found;\n};\n\nvar isAudioOnly = function isAudioOnly(master) {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!master || !master.playlists || !master.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only master.\n    var found = someAudioVariant(master, function (variant) {\n      return variant.playlists && variant.playlists.length || variant.uri;\n    });\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n\n  var _loop = function _loop(i) {\n    var playlist = master.playlists[i];\n    var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(function (c) {\n      return isAudioCodec(c);\n    })) {\n      return \"continue\";\n    } // playlist is in an audio group it is audio only\n\n\n    var found = someAudioVariant(master, function (variant) {\n      return playlistMatch(playlist, variant);\n    });\n\n    if (found) {\n      return \"continue\";\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n\n    return {\n      v: false\n    };\n  };\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n    if (typeof _ret === \"object\") return _ret.v;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n\n  return true;\n}; // exports\n\n\nvar Playlist = {\n  liveEdgeDelay: liveEdgeDelay,\n  duration: duration,\n  seekable: seekable,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition,\n  isAudioOnly: isAudioOnly,\n  playlistMatch: playlistMatch,\n  segmentDurationWithParts: segmentDurationWithParts\n};\nvar log = videojs.log;\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + \"-\" + uri;\n}; // default function for creating a group id\n\n\nvar groupID = function groupID(type, group, label) {\n  return \"placeholder-uri-\" + type + \"-\" + group + \"-\" + label;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [experimentalLLHLS=false]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\n\nvar parseManifest = function parseManifest(_ref) {\n  var onwarn = _ref.onwarn,\n      oninfo = _ref.oninfo,\n      manifestString = _ref.manifestString,\n      _ref$customTagParsers = _ref.customTagParsers,\n      customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n      _ref$customTagMappers = _ref.customTagMappers,\n      customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n      experimentalLLHLS = _ref.experimentalLLHLS;\n  var parser = new Parser();\n\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n\n  customTagParsers.forEach(function (customParser) {\n    return parser.addParser(customParser);\n  });\n  customTagMappers.forEach(function (mapper) {\n    return parser.addTagMapper(mapper);\n  });\n  parser.push(manifestString);\n  parser.end();\n  var manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!experimentalLLHLS) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n\n  if (!manifest.targetDuration) {\n    var targetDuration = 10;\n\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce(function (acc, s) {\n        return Math.max(acc, s.duration);\n      }, 0);\n    }\n\n    if (onwarn) {\n      onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n    }\n\n    manifest.targetDuration = targetDuration;\n  }\n\n  var parts = getLastParts(manifest);\n\n  if (parts.length && !manifest.partTargetDuration) {\n    var partTargetDuration = parts.reduce(function (acc, p) {\n      return Math.max(acc, p.duration);\n    }, 0);\n\n    if (onwarn) {\n      onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n\n    manifest.partTargetDuration = partTargetDuration;\n  }\n\n  return manifest;\n};\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  if (!master.mediaGroups) {\n    return;\n  }\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    if (!master.mediaGroups[mediaType]) {\n      return;\n    }\n\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a master\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\n\nvar setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n  var playlist = _ref2.playlist,\n      uri = _ref2.uri,\n      id = _ref2.id;\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS master playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    setupMediaPlaylist({\n      playlist: playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a master playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         Master playlist\n */\n\n\nvar masterForMedia = function masterForMedia(media, uri) {\n  var id = createPlaylistID(0, uri);\n  var master = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri: uri,\n      id: id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n  master.playlists[uri] = master.playlists[0];\n  return master;\n};\n/**\n * Does an in-place update of the master manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} master\n *        Master manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\n\nvar addPropertiesToMaster = function addPropertiesToMaster(master, uri, createGroupID) {\n  if (createGroupID === void 0) {\n    createGroupID = groupID;\n  }\n\n  master.uri = uri;\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    if (!master.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      var phonyUri = \"placeholder-uri-\" + i;\n      master.playlists[i].uri = phonyUri;\n    }\n  }\n\n  var audioOnlyMaster = isAudioOnly(master);\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n        for (var _i = 0; _i < master.playlists.length; _i++) {\n          var p = master.playlists[_i];\n\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n\n      properties.playlists = [_extends({}, properties)];\n    }\n\n    properties.playlists.forEach(function (p, i) {\n      var groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      var id = createPlaylistID(i, groupId);\n\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      master.playlists[p.id] = p;\n      master.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(master);\n  resolveMediaGroupUris(master);\n};\n\nvar mergeOptions$2 = videojs.mergeOptions,\n    EventTarget$1 = videojs.EventTarget;\n\nvar addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n\n  var parameters = {};\n\n  if (media.serverControl.canBlockReload) {\n    var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n    var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n\n    parameters._HLS_msn = nextMSN;\n  }\n\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n\n  if (Object.keys(parameters).length) {\n    var parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\n\nvar updateSegment = function updateSegment(a, b) {\n  if (!a) {\n    return b;\n  }\n\n  var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (var i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var oldSegments = original.slice();\n  var newSegments = update.slice();\n  offset = offset || 0;\n  var result = [];\n  var currentMap;\n\n  for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    var oldSegment = oldSegments[newIndex + offset];\n    var newSegment = newSegments[newIndex];\n\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n\n      result.push(newSegment);\n    }\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\n\nvar getAllSegments = function getAllSegments(media) {\n  var segments = media.segments || [];\n  var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\n\nvar isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n  return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n  if (unchangedCheck === void 0) {\n    unchangedCheck = isPlaylistUnchanged;\n  }\n\n  var result = mergeOptions$2(master, {});\n  var oldMedia = result.playlists[newMedia.id];\n\n  if (!oldMedia) {\n    return null;\n  }\n\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n\n  newMedia.segments = getAllSegments(newMedia);\n  var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var _i = 0; _i < result.playlists.length; _i++) {\n    if (result.playlists[_i].id === newMedia.id) {\n      result.playlists[_i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (!properties.playlists) {\n      return;\n    }\n\n    for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n      if (newMedia.id === properties.playlists[_i2].id) {\n        properties.playlists[_i2] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var segments = media.segments || [];\n  var lastSegment = segments[segments.length - 1];\n  var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\n\nvar PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(src, vhs, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n\n    _this.logger_ = logger('PlaylistLoader');\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.src = src;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var vhsOptions = vhs.options_;\n    _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n    if (videojs.browser.IE_VERSION) {\n      _this.experimentalLLHLS = false;\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(_assertThisInitialized(_this));\n\n    _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n    return _this;\n  }\n\n  var _proto = PlaylistLoader.prototype;\n\n  _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n    var _this2 = this;\n\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n\n    var media = this.media();\n    var uri = resolveUrl(this.master.uri, media.uri);\n\n    if (this.experimentalLLHLS) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri: uri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this2.request) {\n        return;\n      }\n\n      if (error) {\n        return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n      }\n\n      _this2.haveMetadata({\n        playlistString: _this2.request.responseText,\n        url: _this2.media().uri,\n        id: _this2.media().id\n      });\n    });\n  };\n\n  _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n    var uri = playlist.uri,\n        id = playlist.id; // any in-flight request is now finished\n\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[id],\n      status: xhr.status,\n      message: \"HLS playlist request error at URL: \" + uri + \".\",\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  };\n\n  _proto.parseManifest_ = function parseManifest_(_ref) {\n    var _this3 = this;\n\n    var url = _ref.url,\n        manifestString = _ref.manifestString;\n    return parseManifest({\n      onwarn: function onwarn(_ref2) {\n        var message = _ref2.message;\n        return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n      },\n      oninfo: function oninfo(_ref3) {\n        var message = _ref3.message;\n        return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n      },\n      manifestString: manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      experimentalLLHLS: this.experimentalLLHLS\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n  ;\n\n  _proto.haveMetadata = function haveMetadata(_ref4) {\n    var playlistString = _ref4.playlistString,\n        playlistObject = _ref4.playlistObject,\n        url = _ref4.url,\n        id = _ref4.id; // any in-flight request is now finished\n\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    var playlist = playlistObject || this.parseManifest_({\n      url: url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist: playlist,\n      uri: url,\n      id: id\n    }); // merge this playlist into the master\n\n    var update = updateMaster$1(this.master, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n  ;\n\n  _proto.media = function media(playlist, shouldDelay) {\n    var _this4 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.master.playlists[playlist];\n    }\n\n    window$1.clearTimeout(this.finalRenditionTimeout);\n\n    if (shouldDelay) {\n      var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n\n    var startingState = this.state;\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n\n        if (startingState === 'HAVE_MASTER') {\n          // The initial playlist was a master manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this4.request) {\n        return;\n      }\n\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n      if (error) {\n        return _this4.playlistRequestError(_this4.request, playlist, startingState);\n      }\n\n      _this4.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n      if (startingState === 'HAVE_MASTER') {\n        _this4.trigger('loadedmetadata');\n      } else {\n        _this4.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n\n    this.stopRequest();\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.load = function load(shouldDelay) {\n    var _this5 = this;\n\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n\n    var media = this.media();\n\n    if (shouldDelay) {\n      var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this5.mediaUpdateTimeout = null;\n\n        _this5.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n    var _this6 = this;\n\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n\n    this.mediaUpdateTimeout = window$1.setTimeout(function () {\n      _this6.mediaUpdateTimeout = null;\n\n      _this6.trigger('mediaupdatetimeout');\n\n      _this6.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.start = function start() {\n    var _this7 = this;\n\n    this.started = true;\n\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a master playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(function () {\n        _this7.setupInitialPlaylist(_this7.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this7.request = null;\n\n      if (error) {\n        _this7.error = {\n          status: req.status,\n          message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this7.state === 'HAVE_NOTHING') {\n          _this7.started = false;\n        }\n\n        return _this7.trigger('error');\n      }\n\n      _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n      var manifest = _this7.parseManifest_({\n        manifestString: req.responseText,\n        url: _this7.src\n      });\n\n      _this7.setupInitialPlaylist(manifest);\n    });\n  };\n\n  _proto.srcUri = function srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a master or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a master playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a master playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n  ;\n\n  _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MASTER';\n\n    if (manifest.playlists) {\n      this.master = manifest;\n      addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(function (playlist) {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(function (segment) {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n\n    var uri = this.srcUri() || window$1.location.href;\n    this.master = masterForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.master.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file xhr.js\n */\n\n\nvar videojsXHR = videojs.xhr,\n    mergeOptions$1 = videojs.mergeOptions;\n\nvar callbackWrapper = function callbackWrapper(request, error, response, callback) {\n  var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n\n  callback(error, request);\n};\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = mergeOptions$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n    var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    var request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var byterangeEnd;\n  var byterangeStart = byterange.offset;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex;\n  var ascii;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime;\n  var programDateTime;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === void 0 ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + \" was not found in the stream\"\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + \" is not buffered yet. Try again\"\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n}; // which will only happen if the request is complete.\n\n\nvar callbackOnCompleted = function callbackOnCompleted(request, cb) {\n  if (request.readyState === 4) {\n    return cb();\n  }\n\n  return;\n};\n\nvar containerRequest = function containerRequest(uri, xhr, cb) {\n  var bytes = [];\n  var id3Offset;\n  var finished = false;\n\n  var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n\n  var progressListener = function progressListener(error, request) {\n    if (finished) {\n      return;\n    }\n\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n\n    var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n\n  var options = {\n    uri: uri,\n    beforeSend: function beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function (_ref) {\n        _ref.total;\n        _ref.loaded;\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  var request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\n\nvar EventTarget = videojs.EventTarget,\n    mergeOptions = videojs.mergeOptions;\n\nvar dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n\n  for (var i = 0; i < a.segments.length; i++) {\n    var aSegment = a.segments[i];\n    var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n\n    var aByterange = aSegment.byterange;\n    var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\n\nvar dashGroupId = function dashGroupId(type, group, label, playlist) {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  var playlistId = playlist.attributes.NAME || label;\n  return \"placeholder-uri-\" + type + \"-\" + group + \"-\" + playlistId;\n};\n/**\n * Parses the master XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.masterXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\n\nvar parseMasterXml = function parseMasterXml(_ref) {\n  var masterXml = _ref.masterXml,\n      srcUrl = _ref.srcUrl,\n      clientOffset = _ref.clientOffset,\n      sidxMapping = _ref.sidxMapping,\n      previousManifest = _ref.previousManifest;\n  var manifest = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset,\n    sidxMapping: sidxMapping,\n    previousManifest: previousManifest\n  });\n  addPropertiesToMaster(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMaster\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMaster\n *         The new mpd object\n */\n\n\nvar removeOldMediaGroupLabels = function removeOldMediaGroupLabels(update, newMaster) {\n  forEachMediaGroup(update, function (properties, type, group, label) {\n    if (!(label in newMaster.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\n\nvar updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n  var noChanges = true;\n  var update = mergeOptions(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod,\n    timelineStarts: newMaster.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlist = newMaster.playlists[i];\n\n    if (playlist.sidx) {\n      var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n\n    var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMaster\n\n  removeOldMediaGroupLabels(update, newMaster);\n\n  if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} master the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\n\nvar DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.masterPlaylistLoader_ = masterPlaylistLoader || _assertThisInitialized(_this);\n\n    if (!masterPlaylistLoader) {\n      _this.isMaster_ = true;\n    }\n\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {};\n    _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (_this.isMaster_) {\n      _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.masterPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      _this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n\n    return _this;\n  }\n\n  var _proto = DashPlaylistLoader.prototype;\n\n  _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n\n    this.request = null;\n\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n  ;\n\n  _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n    var _this2 = this;\n\n    var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(function () {\n        return cb(false);\n      }, 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n\n    var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n    var fin = function fin(err, request) {\n      if (_this2.requestErrored_(err, request, startingState)) {\n        return;\n      }\n\n      var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n      var sidx;\n\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        _this2.requestErrored_(e, request, startingState);\n\n        return;\n      }\n\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx: sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n\n    this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n      if (err) {\n        return fin(err, request);\n      }\n\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist: playlist,\n          internal: true,\n          blacklistDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n\n      var _playlist$sidx$bytera = playlist.sidx.byterange,\n          offset = _playlist$sidx$bytera.offset,\n          length = _playlist$sidx$bytera.length;\n\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n\n      _this2.request = _this2.vhs_.xhr({\n        uri: uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.off();\n  };\n\n  _proto.hasPendingRequest = function hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  _proto.media = function media(playlist) {\n    var _this3 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n\n      return;\n    } // switching to the active playlist is a no-op\n\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n      // everything is ready just continue to haveMetadata\n      _this3.haveMetadata({\n        startingState: startingState,\n        playlist: playlist\n      });\n    });\n  };\n\n  _proto.haveMetadata = function haveMetadata(_ref2) {\n    var startingState = _ref2.startingState,\n        playlist = _ref2.playlist;\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MASTER') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  };\n\n  _proto.pause = function pause() {\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n\n    if (this.isMaster_) {\n      window$1.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  _proto.load = function load(isFinalRendition) {\n    var _this4 = this;\n\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        return _this4.load();\n      }, delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      // Check to see if this is the master loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the master manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.start = function start() {\n    var _this5 = this;\n\n    this.started = true; // We don't need to request the master manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMaster_) {\n      this.mediaRequest_ = window$1.setTimeout(function () {\n        return _this5.haveMaster_();\n      }, 0);\n      return;\n    }\n\n    this.requestMaster_(function (req, masterChanged) {\n      _this5.haveMaster_();\n\n      if (!_this5.hasPendingRequest() && !_this5.media_) {\n        _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n      }\n    });\n  };\n\n  _proto.requestMaster_ = function requestMaster_(cb) {\n    var _this6 = this;\n\n    this.request = this.vhs_.xhr({\n      uri: this.masterPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      if (_this6.requestErrored_(error, req)) {\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n\n        return;\n      }\n\n      var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n      _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this6.masterLoaded_ = Date.now();\n      }\n\n      _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n      if (masterChanged) {\n        _this6.handleMaster_();\n\n        _this6.syncClientServerClock_(function () {\n          return cb(req, masterChanged);\n        });\n\n        return;\n      }\n\n      return cb(req, masterChanged);\n    });\n  }\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n  ;\n\n  _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this7 = this;\n\n    var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this7.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  };\n\n  _proto.haveMaster_ = function haveMaster_() {\n    this.state = 'HAVE_MASTER';\n\n    if (this.isMaster_) {\n      // We have the master playlist at this point, so\n      // trigger this to allow MasterPlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  };\n\n  _proto.handleMaster_ = function handleMaster_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    var oldMaster = this.masterPlaylistLoader_.master;\n    var newMaster = parseMasterXml({\n      masterXml: this.masterPlaylistLoader_.masterXml_,\n      srcUrl: this.masterPlaylistLoader_.srcUrl,\n      clientOffset: this.masterPlaylistLoader_.clientOffset_,\n      sidxMapping: this.masterPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMaster\n    }); // if we have an old master to compare the new master against\n\n    if (oldMaster) {\n      newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n    } // only update master if we have a new master\n\n\n    this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n    var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n    if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n      this.masterPlaylistLoader_.srcUrl = location;\n    }\n\n    if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n\n    return Boolean(newMaster);\n  };\n\n  _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n    var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n      }\n\n      return;\n    }\n\n    this.createMUPTimeout_(mup);\n  };\n\n  _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n    var mpl = this.masterPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   */\n  ;\n\n  _proto.refreshXml_ = function refreshXml_() {\n    var _this8 = this;\n\n    this.requestMaster_(function (req, masterChanged) {\n      if (!masterChanged) {\n        return;\n      }\n\n      if (_this8.media_) {\n        _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n\n      _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n      _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n        // TODO: do we need to reload the current playlist?\n        _this8.refreshMedia_(_this8.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n  ;\n\n  _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n    var _this9 = this;\n\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for master we have to reparse the master xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating master\n    // if this is the first time this.media_ is being set.\n    // as master was just parsed in that case.\n\n\n    if (this.media_ && this.isMaster_) {\n      this.handleMaster_();\n    }\n\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.mediaUpdateTimeout) {\n      var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n        if (_this9.media().endList) {\n          return;\n        }\n\n        _this9.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n\n          createMediaUpdateTimeout();\n        }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n      };\n\n      createMediaUpdateTimeout();\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget);\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\n\nvar stringToArrayBuffer = function stringToArrayBuffer(string) {\n  var view = new Uint8Array(new ArrayBuffer(string.length));\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view.buffer;\n};\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\n\n\nvar browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\n\nvar createObjectURL = function createObjectURL(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\n\nvar factory = function factory(code) {\n  return function () {\n    var objectUrl = createObjectURL(code);\n    var worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    var terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n\n    return worker;\n  };\n};\n\nvar transform = function transform(code) {\n  return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n};\n\nvar getWorkerString = function getWorkerString(fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\n\n\nvar workerCode$1 = transform(getWorkerString(function () {\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n  var Stream = function Stream() {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n\n      this.off = function (type, listener) {\n        var index;\n\n        if (!listeners[type]) {\n          return false;\n        }\n\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n\n  Stream.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n\n  Stream.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n\n  Stream.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n\n  Stream.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n\n  Stream.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n\n  var stream = Stream;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n\n  var getUint64$2 = function getUint64(uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n\n      return value;\n    }\n\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n\n  var numbers = {\n    getUint64: getUint64$2,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function box(type) {\n    var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n\n    return result;\n  };\n\n  dinf = function dinf() {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n\n  esds = function esds(track) {\n    return box(types.esds, new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15, // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function ftyp() {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n\n  hdlr = function hdlr(type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n\n  mdat = function mdat(data) {\n    return box(types.mdat, data);\n  };\n\n  mdhd = function mdhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n    0x55, 0xc4, // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n\n    return box(types.mdhd, result);\n  };\n\n  mdia = function mdia(track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n\n  mfhd = function mfhd(sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function minf(track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n\n  moof = function moof(sequenceNumber, tracks) {\n    var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n\n  moov = function moov(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n\n  mvex = function mvex(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n\n  mvhd = function mvhd(duration) {\n    var bytes = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // creation_time\n    0x00, 0x00, 0x00, 0x02, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n    0x00, 0x01, 0x00, 0x00, // 1.0 rate\n    0x01, 0x00, // 1.0 volume\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n\n  sdtp = function sdtp(track) {\n    var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n\n    return box(types.sdtp, bytes);\n  };\n\n  stbl = function stbl(track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n\n  (function () {\n    var videoSample, audioSample;\n\n    stsd = function stsd(track) {\n      return box(types.stsd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n\n    videoSample = function videoSample(track) {\n      var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i,\n          avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff, // width\n      (track.height & 0xff00) >> 8, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length], // numOfSequenceParameterSets\n      sequenceParameterSets, // \"SPS\"\n      [pps.length], // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n            vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n\n      return box.apply(null, avc1Box);\n    };\n\n    audioSample = function audioSample(track) {\n      return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n\n  tkhd = function tkhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n\n  traf = function traf(track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 + // tfhd\n    20 + // tfdt\n    8 + // traf header\n    16 + // mfhd\n    8 + // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n\n  trak = function trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n\n  trex = function trex(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n\n    return box(types.trex, result);\n  };\n\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function trunHeader(samples, offset) {\n      var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n\n      return [0x00, // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function videoTrun(track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    audioTrun = function audioTrun(track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    trun$1 = function trun(track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n\n      return videoTrun(track, offset);\n    };\n  })();\n\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function initSegment(tracks) {\n      var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n    var i,\n        currentNal,\n        currentFrame = [],\n        frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n\n  var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n    var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n\n  var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n\n  var createDefaultSample = function createDefaultSample() {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n\n  var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n\n  var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n    var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n\n  var concatenateNalData = function concatenateNalData(gops) {\n    var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n\n    return data;\n  }; // generate the track's sample table from a frame\n\n\n  var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n    var sample,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n\n  var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n    var i,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = frame.byteLength,\n        numberOfNals = frame.length,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var frameUtils = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n  var zeroFill = function zeroFill(count) {\n    var a = [];\n\n    while (count--) {\n      a.push(0);\n    }\n\n    return a;\n  };\n\n  var makeTable = function makeTable(metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n\n  var silence;\n\n  var silence_1 = function silence_1() {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function sumFrameByteLengths(array) {\n    var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n\n  var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i,\n        firstFrame;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = silence_1()[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n\n    track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n\n  var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n\n  var generateSampleTable = function generateSampleTable(frames) {\n    var i,\n        currentFrame,\n        samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n\n  var concatenateFrameData = function concatenateFrameData(frames) {\n    var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var audioFrameUtils = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function collectDtsInfo(track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n\n  var clearDtsInfo = function clearDtsInfo(track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n\n    return baseMediaDecodeTime;\n  };\n\n  var trackDecodeInfo = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function parseSei(bytes) {\n    var i = 0,\n        result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n  var parseUserData = function parseUserData(sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n\n  var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n    var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n\n    count = userData[0] & 0x1f;\n\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n\n    return results;\n  };\n\n  var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  }; // exports\n\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  }; // Link To Transport\n  // -----------------\n\n  var CaptionStream$1 = function CaptionStream(options) {\n    options = options || {};\n    CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n\n  CaptionStream$1.prototype = new stream();\n\n  CaptionStream$1.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n\n    sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n\n    if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n\n    userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n\n      return;\n    } // parse out CC data packets and save them for later\n\n\n    newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n\n  CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n\n  CaptionStream$1.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n\n  CaptionStream$1.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n\n  CaptionStream$1.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n\n  CaptionStream$1.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n\n  CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n\n  CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n\n  CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n\n  CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n\n  CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n\n  };\n\n  var get708CharFromCode = function get708CharFromCode(code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n\n    return String.fromCharCode(newCode);\n  };\n\n  var within708TextBlock = function within708TextBlock(b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n\n  var Cea708Window = function Cea708Window(windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n\n    return false;\n  };\n\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n\n  var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n\n  var Cea708Stream = function Cea708Stream(options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(function (serviceName) {\n      serviceProps = captionServices[serviceName];\n\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n\n        self.add708Bytes(packet);\n      }\n    };\n  };\n\n  Cea708Stream.prototype = new stream();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n\n      this.pushServiceBlock(serviceNum, i, blockSize);\n\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n\n    var _char;\n\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n\n      _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      _char = get708CharFromCode(extended | currentByte);\n    }\n\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n\n    win.pendingNewLine = false;\n    win.addText(_char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n\n  };\n\n  var getCharFromCode = function getCharFromCode(code) {\n    if (code === null) {\n      return '';\n    }\n\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function createDisplayBuffer() {\n    var result = [],\n        i = BOTTOM_ROW + 1;\n\n    while (i--) {\n      result.push('');\n    }\n\n    return result;\n  };\n\n  var Cea608Stream = function Cea608Stream(field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n\n          this.setRollUp(packet.pts, row);\n        }\n\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n\n    };\n  };\n\n  Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n\n  Cea608Stream.prototype.isNormalChar = function (_char2) {\n    return _char2 >= 0x20 && _char2 <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n\n    this.displayed_[this.row_] = '';\n  };\n\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n\n  var captionStream = {\n    CaptionStream: CaptionStream$1,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n\n  var handleRollover$1 = function handleRollover(value, reference) {\n    var direction = 1;\n\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n\n    return value;\n  };\n\n  var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n\n  TimestampRolloverStream$1.prototype = new stream();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  };\n\n  var percentEncode$1 = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function parseUtf8(bytes, start, end) {\n    return decodeURIComponent(percentEncode$1(bytes, start, end));\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591$1 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n  },\n      parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  },\n      tagParsers = {\n    TXXX: function TXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n\n      tag.data = tag.value;\n    },\n    WXXX: function WXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function PRIV(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591$1(tag.data, 0, i);\n          break;\n        }\n      }\n\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n      _MetadataStream;\n\n  _MetadataStream = function MetadataStream(options) {\n    var settings = {\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n        // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n        // tag data that is not complete enough to be parsed\n    buffer = [],\n        // the total number of bytes currently in the buffer\n    bufferSize = 0,\n        i;\n\n    _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n    this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n\n      frameStart = 10;\n\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n          });\n          return;\n        }\n\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id;\n\n        if (tagParsers[frame.id]) {\n          tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n                size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n\n            this.trigger('timestamp', frame);\n          }\n        }\n\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n\n      this.trigger('data', tag);\n    };\n  };\n\n  _MetadataStream.prototype = new stream();\n  var metadataStream = _MetadataStream;\n  var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n  SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  _TransportPacketStream = function TransportPacketStream() {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n        bytesInBuffer = 0;\n\n    _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH$1,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n\n  _TransportPacketStream.prototype = new stream();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  _TransportParseStream = function TransportParseStream() {\n    var parsePsi, parsePat, parsePmt, self;\n\n    _TransportParseStream.prototype.init.call(this);\n\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n\n    parsePsi = function parsePsi(payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n\n    parsePat = function parsePat(payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n\n    parsePmt = function parsePmt(payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n\n    this.push = function (packet) {\n      var result = {},\n          offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = streamTypes.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = streamTypes.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n\n  _TransportParseStream.prototype = new stream();\n  _TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  _ElementaryStream = function ElementaryStream() {\n    var self = this,\n        segmentHadPmt = false,\n        // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n        audio = {\n      data: [],\n      size: 0\n    },\n        timedMetadata = {\n      data: [],\n      size: 0\n    },\n        programMapTable,\n        parsePes = function parsePes(payload, pes) {\n      var ptsDtsFlags;\n      var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n      pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n      // that are frame data that is continuing from the previous fragment. This\n      // is to check that the pes data is the start of a new pes payload\n\n      if (startPrefix !== 1) {\n        return;\n      } // get the packet length, this will be 0 for video\n\n\n      pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      } // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n\n\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function flushStream(stream, type, forceFlush) {\n      var packetData = new Uint8Array(stream.size),\n          event = {\n        type: type\n      },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n      // PES header\n\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n\n      event.trackId = stream.data[0].pid; // reassemble the packet\n\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      } // parse assembled packet's PES header\n\n\n      parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n\n      packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      } // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n\n\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n    _ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n\n    this.push = function (data) {\n      ({\n        pat: function pat() {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function pes() {\n          var stream, streamType;\n\n          switch (data.streamType) {\n            case streamTypes.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n\n            case streamTypes.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function pmt() {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', pmt);\n      }\n\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n\n  _ElementaryStream.prototype = new stream();\n  var m2ts = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: _TransportPacketStream,\n    TransportParseStream: _TransportParseStream,\n    ElementaryStream: _ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: captionStream.CaptionStream,\n    Cea608Stream: captionStream.Cea608Stream,\n    Cea708Stream: captionStream.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n\n  for (var type in streamTypes) {\n    if (streamTypes.hasOwnProperty(type)) {\n      m2ts[type] = streamTypes[type];\n    }\n  }\n\n  var m2ts_1 = m2ts;\n  var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n  var _AdtsStream;\n\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  _AdtsStream = function AdtsStream(handlePartialSegments) {\n    var buffer,\n        frameNum = 0;\n\n    _AdtsStream.prototype.init.call(this);\n\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n      });\n    };\n\n    this.push = function (packet) {\n      var i = 0,\n          frameLength,\n          protectionSkipBytes,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n\n          i++;\n          continue;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n\n      buffer = buffer.subarray(i);\n    };\n\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AdtsStream.prototype = new stream();\n  var adts = _AdtsStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb = function ExpGolomb(workingData) {\n    var // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n    workingWord = 0,\n        // :uint\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n      valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n\n      bits = size - bits;\n\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n\n      return valu;\n    }; // ():uint\n\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n\n    this.loadWord();\n  };\n\n  var expGolomb = ExpGolomb;\n\n  var _H264Stream, _NalByteStream;\n\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  _NalByteStream = function NalByteStream() {\n    var syncPoint = 0,\n        i,\n        buffer;\n\n    _NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n\n    this.push = function (data) {\n      var swapBuffer;\n\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  _H264Stream = function H264Stream() {\n    var nalByteStream = new _NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n\n    _H264Stream.prototype.init.call(this);\n\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n\n    skipScalingList = function skipScalingList(count, expGolombDecoder) {\n      var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n\n    discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n\n    readSequenceParameterSet = function readSequenceParameterSet(data) {\n      var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio = [1, 1],\n          aspectRatioIdc,\n          i;\n      expGolombDecoder = new expGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n\n            case 2:\n              sarRatio = [12, 11];\n              break;\n\n            case 3:\n              sarRatio = [10, 11];\n              break;\n\n            case 4:\n              sarRatio = [16, 11];\n              break;\n\n            case 5:\n              sarRatio = [40, 33];\n              break;\n\n            case 6:\n              sarRatio = [24, 11];\n              break;\n\n            case 7:\n              sarRatio = [20, 11];\n              break;\n\n            case 8:\n              sarRatio = [32, 11];\n              break;\n\n            case 9:\n              sarRatio = [80, 33];\n              break;\n\n            case 10:\n              sarRatio = [18, 11];\n              break;\n\n            case 11:\n              sarRatio = [15, 11];\n              break;\n\n            case 12:\n              sarRatio = [64, 33];\n              break;\n\n            case 13:\n              sarRatio = [160, 99];\n              break;\n\n            case 14:\n              sarRatio = [4, 3];\n              break;\n\n            case 15:\n              sarRatio = [3, 2];\n              break;\n\n            case 16:\n              sarRatio = [2, 1];\n              break;\n\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n\n  _H264Stream.prototype = new stream();\n  var h264 = {\n    H264Stream: _H264Stream,\n    NalByteStream: _NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n  var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n\n  var getId3Offset = function getId3Offset(data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n\n  var isLikelyAacData$1 = function isLikelyAacData(data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n\n  var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n  var percentEncode = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n\n  var parseIso88591 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n\n  var parseType$2 = function parseType(header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n\n    return null;\n  };\n\n  var parseSampleRate = function parseSampleRate(packet) {\n    var i = 0;\n\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n\n    return null;\n  };\n\n  var parseAacTimestamp = function parseAacTimestamp(packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        return null;\n      }\n\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n\n            break;\n          }\n        }\n      }\n\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n\n    return null;\n  };\n\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$2,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n\n  var _AacStream;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n\n  _AacStream = function AacStream() {\n    var everything = new Uint8Array(),\n        timeStamp = 0;\n\n    _AacStream.prototype.init.call(this);\n\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n\n    this.push = function (bytes) {\n      var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n\n          frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n\n          frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n\n        byteIndex++;\n      }\n\n      bytesLeft = everything.length - byteIndex;\n\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AacStream.prototype = new stream();\n  var aac = _AacStream; // constants\n\n  var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES;\n  var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES;\n  var H264Stream = h264.H264Stream;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n  var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n  var retriggerForStream = function retriggerForStream(key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n\n  var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n\n  var arrayEquals = function arrayEquals(a, b) {\n    var i;\n\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  _AudioSegmentStream = function AudioSegmentStream(track, options) {\n    var adtsFrames = [],\n        sequenceNumber,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n\n    _AudioSegmentStream.prototype.init.call(this);\n\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n\n      if (track) {\n        audioProperties.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n\n      adtsFrames.push(data);\n    };\n\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4Generator.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n\n  _AudioSegmentStream.prototype = new stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  _VideoSegmentStream = function VideoSegmentStream(track, options) {\n    var sequenceNumber,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n\n    _VideoSegmentStream.prototype.init.call(this);\n\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        videoProperties.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n\n    this.flush = function () {\n      var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n      allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          break;\n        }\n\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n\n        gopIndex--;\n      }\n\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n\n      var trimIndex;\n\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n\n      if (trimIndex === 0) {\n        return gops;\n      }\n\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n\n  _VideoSegmentStream.prototype = new stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  _CoalesceStream = function CoalesceStream(options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n\n    _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n\n  _CoalesceStream.prototype = new stream();\n\n  _CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n        event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n\n        return;\n      }\n    }\n\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      videoProperties.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      audioProperties.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n\n  _CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n\n  _Transmuxer = function Transmuxer(options) {\n    var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n\n    _Transmuxer.prototype.init.call(this);\n\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new aac();\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new adts();\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts_1.TransportPacketStream();\n      pipeline.parseStream = new m2ts_1.TransportParseStream();\n      pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n      pipeline.adtsStream = new adts();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts_1.CaptionStream(options);\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n\n        hasFlushed = false;\n      }\n\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n\n  _Transmuxer.prototype = new stream();\n  var transmuxer = {\n    Transmuxer: _Transmuxer,\n    VideoSegmentStream: _VideoSegmentStream,\n    AudioSegmentStream: _AudioSegmentStream,\n    AUDIO_PROPERTIES: audioProperties,\n    VIDEO_PROPERTIES: videoProperties,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function toUnsigned(value) {\n    return value >>> 0;\n  };\n\n  var toHexString$1 = function toHexString(value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n\n  var parseType$1 = function parseType(buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n\n  var parseType_1 = parseType$1;\n  var toUnsigned$2 = bin.toUnsigned;\n\n  var findBox = function findBox(data, path) {\n    var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType_1(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of data\n\n\n    return results;\n  };\n\n  var findBox_1 = findBox;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$1 = numbers.getUint64;\n\n  var tfdt = function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n\n    return result;\n  };\n\n  var parseTfdt = tfdt;\n\n  var parseSampleFlags = function parseSampleFlags(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n\n  var parseSampleFlags_1 = parseSampleFlags;\n\n  var trun = function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  };\n\n  var parseTrun = trun;\n\n  var tfhd = function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  };\n\n  var parseTfhd = tfhd;\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function mapToSample(offset, samples) {\n    var approximateOffset = offset;\n\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n\n      approximateOffset -= sample.size;\n    }\n\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n\n  var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = {\n      logs: [],\n      seiNals: []\n    },\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n\n  var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window_1.BigInt(sample.compositionTimeOffset);\n          currentDts += window_1.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n\n  var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox_1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox_1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n\n  var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n\n  var CaptionParser = function CaptionParser() {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n\n        return null;\n      }\n\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n\n      this.resetCaptionStream();\n    };\n\n    this.reset();\n  };\n\n  var captionParser = CaptionParser;\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function timescale(init) {\n    var result = {},\n        traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox_1(trak, ['tkhd'])[0];\n\n      if (!tkhd) {\n        return null;\n      }\n\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (!mdhd) {\n        return null;\n      }\n\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n\n  startTime = function startTime(timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox_1(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox_1(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n\n      var seconds;\n\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window_1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n\n      if (seconds < acc) {\n        acc = seconds;\n      }\n\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n\n  compositionStartTime = function compositionStartTime(timescales, fragment) {\n    var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window_1.BigInt(compositionTimeOffset);\n      timescale = window_1.BigInt(timescale);\n    }\n\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n\n  getVideoTrackIds = function getVideoTrackIds(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox_1(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType_1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n\n  getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n\n  getTracks = function getTracks(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox_1(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n\n      var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType_1(hdlr.subarray(8, 12));\n\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n\n      var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n\n      var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n\n      tracks.push(track);\n    });\n    return tracks;\n  };\n\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox_1,\n    parseType: parseType_1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n\n  var parsePid = function parsePid(packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n\n  var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n    return !!(packet[1] & 0x40);\n  };\n\n  var parseAdaptionField = function parseAdaptionField(packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n\n    return offset;\n  };\n\n  var parseType = function parseType(packet, pmtPid) {\n    var pid = parsePid(packet);\n\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n\n    return null;\n  };\n\n  var parsePat = function parsePat(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n\n  var parsePmt = function parsePmt(packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n\n    return programMapTable;\n  };\n\n  var parsePesType = function parsePesType(packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n\n    switch (type) {\n      case streamTypes.H264_STREAM_TYPE:\n        return 'video';\n\n      case streamTypes.ADTS_STREAM_TYPE:\n        return 'audio';\n\n      case streamTypes.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n\n      default:\n        return null;\n    }\n  };\n\n  var parsePesTime = function parsePesTime(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n\n    if (!pusi) {\n      return null;\n    }\n\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n\n  var parseNalUnitType = function parseNalUnitType(type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n\n      case 0x06:\n        return 'sei_rbsp';\n\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n\n      default:\n        return null;\n    }\n  };\n\n  var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n\n    return foundKeyFrame;\n  };\n\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n      // bytes\n  SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function parsePsi_(bytes, pmt) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type;\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n\n  var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n\n  var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n\n                    currentFrame.size = 0;\n                  }\n                }\n\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n\n  var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n\n  var inspectAac_ = function inspectAac_(bytes) {\n    var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n\n          byteIndex += frameSize;\n          break;\n\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n\n        default:\n          byteIndex++;\n          break;\n      }\n\n      if (endLoop) {\n        return null;\n      }\n    }\n\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n\n  var inspectTs_ = function inspectTs_(bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n\n        switch (type) {\n          case streamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n\n            break;\n\n          case streamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n\n            break;\n        }\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n\n  var inspect = function inspect(bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      var initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      var typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment: segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo: gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      var videoSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      var audioSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo: audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame: id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption: caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo: trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock.videoTsToSeconds(audioTimingInfo.start),\n          end: clock.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock.videoTsToSeconds(videoTimingInfo.start),\n          end: clock.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log: log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n\n  var MessageHandlers = /*#__PURE__*/function () {\n    function MessageHandlers(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n\n    var _proto = MessageHandlers.prototype;\n\n    _proto.init = function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    };\n\n    _proto.pushMp4Captions = function pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    };\n\n    _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n      var timescales = _ref.timescales,\n          data = _ref.data;\n      var startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime: startTime,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n      var data = _ref2.data;\n      var tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks: tracks,\n        data: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n    ;\n\n    _proto.probeTs = function probeTs(_ref3) {\n      var data = _ref3.data,\n          baseStartTime = _ref3.baseStartTime;\n      var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n      var timeInfo = tsInspector.inspect(data, tsStartTime);\n      var result = null;\n\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n\n      this.self.postMessage({\n        action: 'probeTs',\n        result: result,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    };\n\n    _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n    ;\n\n    _proto.push = function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n    ;\n\n    _proto.setTimestampOffset = function setTimestampOffset(data) {\n      var timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n    };\n\n    _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n    };\n\n    _proto.setRemux = function setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n    ;\n\n    _proto.flush = function flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.endTimeline = function endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.alignGopsWith = function alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    };\n\n    return MessageHandlers;\n  }();\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\n\nvar handleData_ = function handleData_(event, transmuxedData, callback) {\n  var _event$data$segment = event.data.segment,\n      type = _event$data$segment.type,\n      initSegment = _event$data$segment.initSegment,\n      captions = _event$data$segment.captions,\n      captionStreams = _event$data$segment.captionStreams,\n      metadata = _event$data$segment.metadata,\n      videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n      videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n  transmuxedData.buffer.push({\n    captions: captions,\n    captionStreams: captionStreams,\n    metadata: metadata\n  });\n  var boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  var result = {\n    type: type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n\n  callback(result);\n};\n\nvar handleDone_ = function handleDone_(_ref) {\n  var transmuxedData = _ref.transmuxedData,\n      callback = _ref.callback; // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\n\nvar handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\n\nvar processTransmux = function processTransmux(options) {\n  var transmuxer = options.transmuxer,\n      bytes = options.bytes,\n      audioAppendStart = options.audioAppendStart,\n      gopsToAlignWith = options.gopsToAlignWith,\n      remux = options.remux,\n      onData = options.onData,\n      onTrackInfo = options.onTrackInfo,\n      onAudioTimingInfo = options.onAudioTimingInfo,\n      onVideoTimingInfo = options.onVideoTimingInfo,\n      onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n      onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n      onId3 = options.onId3,\n      onCaptions = options.onCaptions,\n      onDone = options.onDone,\n      onEndedTimeline = options.onEndedTimeline,\n      onTransmuxerLog = options.onTransmuxerLog,\n      isEndOfTimeline = options.isEndOfTimeline;\n  var transmuxedData = {\n    buffer: []\n  };\n  var waitForEndedTimelineEvent = isEndOfTimeline;\n\n  var handleMessage = function handleMessage(event) {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData: transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith: gopsToAlignWith\n    });\n  }\n\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux: remux\n    });\n  }\n\n  if (bytes.byteLength) {\n    var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\n\nvar dequeue = function dequeue(transmuxer) {\n  transmuxer.currentTransmux = null;\n\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\n\nvar processAction = function processAction(transmuxer, action) {\n  transmuxer.postMessage({\n    action: action\n  });\n  dequeue(transmuxer);\n};\n\nvar enqueueAction = function enqueueAction(action, transmuxer) {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\n\nvar reset = function reset(transmuxer) {\n  enqueueAction('reset', transmuxer);\n};\n\nvar endTimeline = function endTimeline(transmuxer) {\n  enqueueAction('endTimeline', transmuxer);\n};\n\nvar transmux = function transmux(options) {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n\n  options.transmuxer.transmuxQueue.push(options);\n};\n\nvar createTransmuxer = function createTransmuxer(options) {\n  var transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  var term = transmuxer.terminate;\n\n  transmuxer.terminate = function () {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n\n  transmuxer.postMessage({\n    action: 'init',\n    options: options\n  });\n  return transmuxer;\n};\n\nvar segmentTransmuxer = {\n  reset: reset,\n  endTimeline: endTimeline,\n  transmux: transmux,\n  createTransmuxer: createTransmuxer\n};\n\nvar workerCallback = function workerCallback(options) {\n  var transmuxer = options.transmuxer;\n  var endAction = options.endAction || options.action;\n  var callback = options.callback;\n\n  var message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n\n  var listenForEndEvent = function listenForEndEvent(event) {\n    if (event.data.action !== endAction) {\n      return;\n    }\n\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n\n    callback(event.data);\n  };\n\n  transmuxer.addEventListener('message', listenForEndEvent);\n\n  if (options.data) {\n    var isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n    for (var i = 0; i < objects.length; i++) {\n      objects[i].bytes = bytes;\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar parseInitSegment = function parseInitSegment(segment, _callback) {\n  var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    var uri = segment.map.resolvedUri || segment.map.uri;\n    return _callback({\n      internal: true,\n      message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: function callback(_ref) {\n      var tracks = _ref.tracks,\n          data = _ref.data; // transfer bytes back to us\n\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n\n        segment.map.tracks[track.type] = track;\n\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return _callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n  var segment = _ref2.segment,\n      finishProcessingFn = _ref2.finishProcessingFn;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n    // until the key request is done to decrypt.\n\n    if (segment.map.key) {\n      segment.map.encryptedBytes = bytes;\n      return finishProcessingFn(null, segment);\n    }\n\n    segment.map.bytes = bytes;\n    parseInitSegment(segment, function (parseError) {\n      if (parseError) {\n        parseError.xhr = request;\n        parseError.status = request.status;\n        return finishProcessingFn(parseError, segment);\n      }\n\n      finishProcessingFn(null, segment);\n    });\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(_ref3) {\n  var segment = _ref3.segment,\n      finishProcessingFn = _ref3.finishProcessingFn,\n      responseType = _ref3.responseType;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n    // thrown for two primary cases:\n    // 1. the mime type override stops working, or is not implemented for a specific\n    //    browser\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(newBytes);\n    } else {\n      segment.bytes = new Uint8Array(newBytes);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar transmuxAndNotify = function transmuxAndNotify(_ref4) {\n  var segment = _ref4.segment,\n      bytes = _ref4.bytes,\n      trackInfoFn = _ref4.trackInfoFn,\n      timingInfoFn = _ref4.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n      id3Fn = _ref4.id3Fn,\n      captionsFn = _ref4.captionsFn,\n      isEndOfTimeline = _ref4.isEndOfTimeline,\n      endedTimelineFn = _ref4.endedTimelineFn,\n      dataFn = _ref4.dataFn,\n      doneFn = _ref4.doneFn,\n      onTransmuxerLog = _ref4.onTransmuxerLog;\n  var fmp4Tracks = segment.map && segment.map.tracks || {};\n  var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n  var finish = function finish() {\n    return transmux({\n      bytes: bytes,\n      transmuxer: segment.transmuxer,\n      audioAppendStart: segment.audioAppendStart,\n      gopsToAlignWith: segment.gopsToAlignWith,\n      remux: isMuxed,\n      onData: function onData(result) {\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        dataFn(segment, result);\n      },\n      onTrackInfo: function onTrackInfo(trackInfo) {\n        if (trackInfoFn) {\n          if (isMuxed) {\n            trackInfo.isMuxed = true;\n          }\n\n          trackInfoFn(segment, trackInfo);\n        }\n      },\n      onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n        // we only want the first start value we encounter\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n          audioStartFn(audioTimingInfo.start);\n          audioStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n          audioEndFn(audioTimingInfo.end);\n        }\n      },\n      onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n        // we only want the first start value we encounter\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n          videoStartFn(videoTimingInfo.start);\n          videoStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n          videoEndFn(videoTimingInfo.end);\n        }\n      },\n      onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n      },\n      onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n      },\n      onId3: function onId3(id3Frames, dispatchType) {\n        id3Fn(segment, id3Frames, dispatchType);\n      },\n      onCaptions: function onCaptions(captions) {\n        captionsFn(segment, [captions]);\n      },\n      isEndOfTimeline: isEndOfTimeline,\n      onEndedTimeline: function onEndedTimeline() {\n        endedTimelineFn();\n      },\n      onTransmuxerLog: onTransmuxerLog,\n      onDone: function onDone(result) {\n        if (!doneFn) {\n          return;\n        }\n\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        doneFn(null, segment, result);\n      }\n    });\n  }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: function callback(data) {\n      segment.bytes = bytes = data.data;\n      var probeResult = data.result;\n\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed: isMuxed\n        });\n        trackInfoFn = null;\n\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n\n      finish();\n    }\n  });\n};\n\nvar handleSegmentBytes = function handleSegmentBytes(_ref5) {\n  var segment = _ref5.segment,\n      bytes = _ref5.bytes,\n      trackInfoFn = _ref5.trackInfoFn,\n      timingInfoFn = _ref5.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n      id3Fn = _ref5.id3Fn,\n      captionsFn = _ref5.captionsFn,\n      isEndOfTimeline = _ref5.isEndOfTimeline,\n      endedTimelineFn = _ref5.endedTimelineFn,\n      dataFn = _ref5.dataFn,\n      doneFn = _ref5.doneFn,\n      onTransmuxerLog = _ref5.onTransmuxerLog;\n  var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only blacklist a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    var tracks = segment.map.tracks;\n    var trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    var finishLoading = function finishLoading(captions) {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n\n      doneFn(null, segment, {});\n    };\n\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref6) {\n        var data = _ref6.data,\n            startTime = _ref6.startTime; // transfer bytes back to us\n\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: function callback(message) {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(videojs.mergeOptions(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n\n  transmuxAndNotify({\n    segment: segment,\n    bytes: bytes,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  });\n};\n\nvar decrypt = function decrypt(_ref7, callback) {\n  var id = _ref7.id,\n      key = _ref7.key,\n      encryptedBytes = _ref7.encryptedBytes,\n      decryptionWorker = _ref7.decryptionWorker;\n\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  var keyBytes;\n\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(_ref8) {\n  var decryptionWorker = _ref8.decryptionWorker,\n      segment = _ref8.segment,\n      trackInfoFn = _ref8.trackInfoFn,\n      timingInfoFn = _ref8.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n      id3Fn = _ref8.id3Fn,\n      captionsFn = _ref8.captionsFn,\n      isEndOfTimeline = _ref8.isEndOfTimeline,\n      endedTimelineFn = _ref8.endedTimelineFn,\n      dataFn = _ref8.dataFn,\n      doneFn = _ref8.doneFn,\n      onTransmuxerLog = _ref8.onTransmuxerLog;\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker: decryptionWorker\n  }, function (decryptedBytes) {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment: segment,\n      bytes: segment.bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(_ref9) {\n  var activeXhrs = _ref9.activeXhrs,\n      decryptionWorker = _ref9.decryptionWorker,\n      trackInfoFn = _ref9.trackInfoFn,\n      timingInfoFn = _ref9.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n      id3Fn = _ref9.id3Fn,\n      captionsFn = _ref9.captionsFn,\n      isEndOfTimeline = _ref9.isEndOfTimeline,\n      endedTimelineFn = _ref9.endedTimelineFn,\n      dataFn = _ref9.dataFn,\n      doneFn = _ref9.doneFn,\n      onTransmuxerLog = _ref9.onTransmuxerLog;\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      var segmentFinish = function segmentFinish() {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker: decryptionWorker,\n            segment: segment,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n\n        handleSegmentBytes({\n          segment: segment,\n          bytes: segment.bytes,\n          trackInfoFn: trackInfoFn,\n          timingInfoFn: timingInfoFn,\n          videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n          id3Fn: id3Fn,\n          captionsFn: captionsFn,\n          isEndOfTimeline: isEndOfTimeline,\n          endedTimelineFn: endedTimelineFn,\n          dataFn: dataFn,\n          doneFn: doneFn,\n          onTransmuxerLog: onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker: decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, function (decryptedBytes) {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, function (parseError) {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n\n            segmentFinish();\n          });\n        });\n      }\n\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\n\nvar handleLoadEnd = function handleLoadEnd(_ref10) {\n  var loadendState = _ref10.loadendState,\n      abortFn = _ref10.abortFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n      abortFn();\n      loadendState.calledAbortFn = true;\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(_ref11) {\n  var segment = _ref11.segment,\n      progressFn = _ref11.progressFn;\n  _ref11.trackInfoFn;\n  _ref11.timingInfoFn;\n  _ref11.videoSegmentTimingInfoFn;\n  _ref11.audioSegmentTimingInfoFn;\n  _ref11.id3Fn;\n  _ref11.captionsFn;\n  _ref11.isEndOfTimeline;\n  _ref11.endedTimelineFn;\n  _ref11.dataFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted) {\n      return;\n    }\n\n    segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n  var xhr = _ref12.xhr,\n      xhrOptions = _ref12.xhrOptions,\n      decryptionWorker = _ref12.decryptionWorker,\n      segment = _ref12.segment,\n      abortFn = _ref12.abortFn,\n      progressFn = _ref12.progressFn,\n      trackInfoFn = _ref12.trackInfoFn,\n      timingInfoFn = _ref12.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n      id3Fn = _ref12.id3Fn,\n      captionsFn = _ref12.captionsFn,\n      isEndOfTimeline = _ref12.isEndOfTimeline,\n      endedTimelineFn = _ref12.endedTimelineFn,\n      dataFn = _ref12.dataFn,\n      doneFn = _ref12.doneFn,\n      onTransmuxerLog = _ref12.onTransmuxerLog;\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion({\n    activeXhrs: activeXhrs,\n    decryptionWorker: decryptionWorker,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var objects = [segment.key];\n\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n\n    var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n    if (differentMapKey) {\n      var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n\n    var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn\n    });\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse({\n    segment: segment,\n    finishProcessingFn: finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment: segment,\n    progressFn: progressFn,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  var loadendState = {};\n  activeXhrs.forEach(function (activeXhr) {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState: loadendState,\n      abortFn: abortFn\n    }));\n  });\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n\nvar logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\n\nvar isMaat = function isMaat(master, media) {\n  var mediaAttributes = media.attributes || {};\n  return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\n\nvar isMuxed = function isMuxed(master, media) {\n  if (!isMaat(master, media)) {\n    return true;\n  }\n\n  var mediaAttributes = media.attributes || {};\n  var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n  for (var groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar unwrapCodecList = function unwrapCodecList(codecList) {\n  var codecs = {};\n  codecList.forEach(function (_ref) {\n    var mediaType = _ref.mediaType,\n        type = _ref.type,\n        details = _ref.details;\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n      codecs[mediaType] = null;\n      return;\n    }\n\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\n\nvar codecCount = function codecCount(codecObj) {\n  var count = 0;\n\n  if (codecObj.audio) {\n    count++;\n  }\n\n  if (codecObj.video) {\n    count++;\n  }\n\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\n\nvar codecsForPlaylist = function codecsForPlaylist(master, media) {\n  var mediaAttributes = media.attributes || {};\n  var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(master, media) && !codecInfo.audio) {\n    if (!isMuxed(master, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n\n  return codecInfo;\n};\n\nvar logFn = logger('PlaylistSelector');\n\nvar representationToString = function representationToString(representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n\n  var playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  if (!el) {\n    return '';\n  }\n\n  var result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth;\n  var rightBandwidth;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth;\n  var rightWidth;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} masterPlaylistController\n *        the current masterPlaylistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n  // If we end up getting called before `master` is available, exit early\n  if (!master) {\n    return;\n  }\n\n  var options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n  };\n  var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(master)) {\n    playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n  var sortedPlaylistReps = playlists.map(function (playlist) {\n    var bandwidth;\n    var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (_chosenRep && _chosenRep.playlist) {\n      var type = 'sortedPlaylistReps';\n\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n      return _chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList;\n  var resolutionPlusOneSmallest;\n  var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  var leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    var leastPixelDiffList = haveResolution.map(function (rep) {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, function (left, right) {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  if (chosenRep && chosenRep.playlist) {\n    var _type = 'sortedPlaylistReps';\n\n    if (leastPixelDiffRep) {\n      _type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      _type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      _type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      _type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      _type = 'enabledPlaylistReps';\n    }\n\n    logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n    return chosenRep.playlist;\n  }\n\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\n\nvar movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n  var average = -1;\n  var lastSystemBandwidth = -1;\n\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n\n  return function () {\n    var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n\n    return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  var _this = this; // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n\n\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\n\n\nvar concatSegments = function concatSegments(segmentObj) {\n  var offset = 0;\n  var tempBuffer;\n\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(function (segment) {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n\n  return tempBuffer;\n};\n/**\n * @file text-tracks.js\n */\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-608'\n    });\n    var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n\n    var track = tech.textTracks().getTrackById(instreamId);\n\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      var label = captionStream;\n      var language = captionStream;\n      var def = false;\n      var captionService = captionServices[instreamId];\n\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService[\"default\"];\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        \"default\": def,\n        label: label,\n        language: language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\n\nvar addMetadata = function addMetadata(_ref2) {\n  var inbandTextTracks = _ref2.inbandTextTracks,\n      metadataArray = _ref2.metadataArray,\n      timestampOffset = _ref2.timestampOffset,\n      videoDuration = _ref2.videoDuration;\n\n  if (!metadataArray) {\n    return;\n  }\n\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  var metadataTrack = inbandTextTracks.metadataTrack_;\n\n  if (!metadataTrack) {\n    return;\n  }\n\n  metadataArray.forEach(function (metadata) {\n    var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n\n    metadata.frames.forEach(function (frame) {\n      var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n\n  var cues = metadataTrack.cues;\n  var cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (var i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n\n  var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n    var timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach(function (startTime, idx) {\n    var cueGroup = cuesGroupedByStartTime[startTime];\n    var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(function (cue) {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\n\nvar createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i;\n  var cue;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\n\nvar removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n  var cues = track.cues;\n\n  if (!cues) {\n    return;\n  }\n\n  for (var i = 0; i < cues.length; i++) {\n    var duplicates = [];\n    var occurrences = 0;\n\n    for (var j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n\n    if (duplicates.length) {\n      duplicates.forEach(function (dupe) {\n        return track.removeCue(dupe);\n      });\n    }\n  }\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  var i;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  var endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar shallowEqual = function shallowEqual(a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n\n  var akeys = Object.keys(a).sort();\n  var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < akeys.length; i++) {\n    var key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\nvar QUOTA_EXCEEDED_ERR = 22;\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nvar getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  var timelineSegments = [];\n  var time = 0;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\n\nvar MIN_BACK_BUFFER = 1; // in ms\n\nvar CHECK_BUFFER_DELAY = 500;\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n}; // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\n\nvar MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var startOfSegment = segmentInfo.startOfSegment,\n      duration = segmentInfo.duration,\n      segment = segmentInfo.segment,\n      part = segmentInfo.part,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      partIndex = segmentInfo.partIndex,\n      timeline = segmentInfo.timeline;\n  var segmentLen = segments.length - 1;\n  var selection = 'mediaIndex/partIndex increment';\n\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n\n  if (segmentInfo.independent) {\n    selection += \" with independent \" + segmentInfo.independent;\n  }\n\n  var hasPartIndex = typeof partIndex === 'number';\n  var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n};\n\nvar timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n  return mediaType + \"TimingInfo\";\n};\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\n\nvar timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n  var segmentTimeline = _ref.segmentTimeline,\n      currentTimeline = _ref.currentTimeline,\n      startOfSegment = _ref.startOfSegment,\n      buffered = _ref.buffered,\n      overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\n\nvar shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n  var timelineChangeController = _ref2.timelineChangeController,\n      currentTimeline = _ref2.currentTimeline,\n      segmentTimeline = _ref2.segmentTimeline,\n      loaderType = _ref2.loaderType,\n      audioDisabled = _ref2.audioDisabled;\n\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n\n  if (loaderType === 'audio') {\n    var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n\n  if (loaderType === 'main' && audioDisabled) {\n    var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nvar mediaDuration = function mediaDuration(timingInfos) {\n  var maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    var typeTimingInfo = timingInfos[type + \"TimingInfo\"];\n\n    if (!typeTimingInfo) {\n      return;\n    }\n\n    var start = typeTimingInfo.start,\n        end = typeTimingInfo.end;\n    var duration;\n\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n\n  return maxDuration;\n};\n\nvar segmentTooLong = function segmentTooLong(_ref3) {\n  var segmentDuration = _ref3.segmentDuration,\n      maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\n\nvar getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n\n  var segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n\n  var targetDuration = segmentInfo.playlist.targetDuration;\n  var isSegmentWayTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  var isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration\n  });\n  var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings, options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null;\n    _this.partIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.vhs_ = settings.vhs;\n    _this.loaderType_ = settings.loaderType;\n    _this.currentMediaInfo_ = void 0;\n    _this.startingMediaInfo_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.sourceUpdater_ = settings.sourceUpdater;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n    _this.timelineChangeController_ = settings.timelineChangeController;\n    _this.shouldSaveSegmentTimingInfo_ = true;\n    _this.parse708captions_ = settings.parse708captions;\n    _this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    _this.captionServices_ = settings.captionServices;\n    _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.xhrOptions_ = null;\n    _this.pendingSegments_ = [];\n    _this.audioDisabled_ = false;\n    _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    _this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    _this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    _this.loadQueue_ = [];\n    _this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    _this.waitingOnRemove_ = false;\n    _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {};\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    _this.transmuxer_ = _this.createTransmuxer_();\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      if (!_this.isEndOfStream_()) {\n        _this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n    Object.defineProperty(_assertThisInitialized(_this), 'state', {\n      get: function get() {\n        return this.state_;\n      },\n      set: function set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + \" -> \" + newState);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n\n    _this.sourceUpdater_.on('ready', function () {\n      if (_this.hasEnoughInfoToAppend_()) {\n        _this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'main') {\n      _this.timelineChangeController_.on('pendingtimelinechange', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'audio') {\n      _this.timelineChangeController_.on('timelinechange', function () {\n        if (_this.hasEnoughInfoToLoad_()) {\n          _this.processLoadQueue_();\n        }\n\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = SegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n\n    this.resetStats_();\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n\n    this.off();\n  };\n\n  _proto.setAudio = function setAudio(enable) {\n    this.audioDisabled_ = !enable;\n\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n  ;\n\n  _proto.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n\n      return;\n    }\n\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n  ;\n\n  _proto.abort_ = function abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  };\n\n  _proto.checkForAbort_ = function checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n  ;\n\n  _proto.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.logger_('error occurred:', _error);\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  _proto.endOfStream = function endOfStream() {\n    this.ended_ = true;\n\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    var trackInfo = this.getMediaInfo_();\n\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return videojs.createTimeRanges();\n    }\n\n    if (this.loaderType_ === 'main') {\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n  ;\n\n  _proto.segmentKey = function segmentKey(key, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!key) {\n      return null;\n    }\n\n    var id = segmentKeyId(key);\n    var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n\n    var result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n  ;\n\n  _proto.load = function load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n  ;\n\n  _proto.playlist = function playlist(newPlaylist, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n\n    var oldId = null;\n\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n\n    this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          var mediaIndex = this.mediaIndex;\n          this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n  ;\n\n  _proto.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n  ;\n\n  _proto.resetEverything = function resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n  ;\n\n  _proto.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n  ;\n\n  _proto.resyncLoader = function resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n  ;\n\n  _proto.remove = function remove(start, end, done, force) {\n    if (done === void 0) {\n      done = function done() {};\n    }\n\n    if (force === void 0) {\n      force = false;\n    } // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n\n\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n\n    var removesRemaining = 1;\n\n    var removeFinished = function removeFinished() {\n      removesRemaining--;\n\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n\n    for (var track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n  ;\n\n  _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n    if (mediaIndex === void 0) {\n      mediaIndex = this.mediaIndex;\n    }\n\n    if (playlist === void 0) {\n      playlist = this.playlist_;\n    }\n\n    if (partIndex === void 0) {\n      partIndex = this.partIndex;\n    }\n\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n\n    var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n  ;\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    var buffered = this.buffered_();\n    var bufferedEnd = lastBufferedEnd(buffered) || 0;\n    var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    var segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    var next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      var segment = segments[this.mediaIndex];\n      var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n        experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      }),\n          segmentIndex = _Playlist$getMediaInf.segmentIndex,\n          startTime = _Playlist$getMediaInf.startTime,\n          _partIndex = _Playlist$getMediaInf.partIndex;\n\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = _partIndex;\n    }\n\n    var nextSegment = segments[next.mediaIndex];\n    var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        var lastSegment = segments[next.mediaIndex - 1];\n        var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n\n    var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n\n    return this.generateSegmentInfo_(next);\n  };\n\n  _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n    var independent = options.independent,\n        playlist = options.playlist,\n        mediaIndex = options.mediaIndex,\n        startOfSegment = options.startOfSegment,\n        isSyncRequest = options.isSyncRequest,\n        partIndex = options.partIndex,\n        forceTimestampOffset = options.forceTimestampOffset,\n        getMediaInfoForTime = options.getMediaInfoForTime;\n    var segment = playlist.segments[mediaIndex];\n    var part = typeof partIndex === 'number' && segment.parts[partIndex];\n    var segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment,\n      part: part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime: getMediaInfoForTime,\n      independent: independent\n    };\n    var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment: startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck: overrideCheck\n    });\n    var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n  ;\n\n  _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.vhs_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  };\n\n  _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n    this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n  ;\n\n  _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n\n  _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n    var _this2 = this;\n\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    var captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(function (caption) {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      var captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(function (trackName) {\n      var _captionTracks$trackN = captionTracks[trackName],\n          startTime = _captionTracks$trackN.startTime,\n          endTime = _captionTracks$trackN.endTime,\n          captions = _captionTracks$trackN.captions;\n      var inbandTextTracks = _this2.inbandTextTracks_;\n\n      _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n      createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks: inbandTextTracks,\n        timestampOffset: timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  };\n\n  _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset: timestampOffset,\n      videoDuration: this.duration_()\n    });\n  };\n\n  _proto.processMetadataQueue_ = function processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.caption.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  };\n\n  _proto.processCallQueue_ = function processCallQueue_() {\n    var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(function (fun) {\n      return fun();\n    });\n  };\n\n  _proto.processLoadQueue_ = function processLoadQueue_() {\n    var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(function (fun) {\n      return fun();\n    });\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n  ;\n\n  _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n\n    var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n\n    if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  };\n\n  _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  };\n\n  _proto.getPendingSegmentPlaylist = function getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  };\n\n  _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.handleData_ = function handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      var trackInfo = this.getCurrentMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var firstVideoFrameTimeForData;\n\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo: useVideoTimingInfo,\n        firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  };\n\n  _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  };\n\n  _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n    var type = _ref4.type,\n        initSegment = _ref4.initSegment,\n        map = _ref4.map,\n        playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n    if (map) {\n      var id = initSegmentId(map);\n\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n\n    return null;\n  };\n\n  _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n    var _this3 = this;\n\n    var segmentInfo = _ref5.segmentInfo,\n        type = _ref5.type,\n        bytes = _ref5.bytes;\n    var audioBuffered = this.sourceUpdater_.audioBuffered();\n    var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n\n    var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n    var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n    this.remove(0, timeToRemoveUntil, function () {\n      _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n      _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      _this3.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(function () {\n        _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n        _this3.quotaExceededErrorRetryTimeout_ = null;\n\n        _this3.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  };\n\n  _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n    var segmentInfo = _ref6.segmentInfo,\n        type = _ref6.type,\n        bytes = _ref6.bytes; // if there's no error, nothing to do\n\n    if (!error) {\n      return;\n    }\n\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  };\n\n  _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n    var segmentInfo = _ref7.segmentInfo,\n        type = _ref7.type,\n        initSegment = _ref7.initSegment,\n        data = _ref7.data,\n        bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n    if (!bytes) {\n      var segments = [data];\n      var byteLength = data.byteLength;\n\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments: segments\n      });\n    }\n\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n  };\n\n  _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n\n    var segment = this.pendingSegment_.segment;\n    var timingInfoProperty = type + \"TimingInfo\";\n\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  };\n\n  _proto.appendData_ = function appendData_(segmentInfo, result) {\n    var type = result.type,\n        data = result.data;\n\n    if (!data || !data.byteLength) {\n      return;\n    }\n\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n\n    var initSegment = this.getInitSegmentAndUpdateState_({\n      type: type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo: segmentInfo,\n      type: type,\n      initSegment: initSegment,\n      data: data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n    var _this4 = this;\n\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(function () {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        var options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n\n        _extends(segmentInfo, _this4.generateSegmentInfo_(options));\n\n        _this4.isPendingTimestampOffset_ = false;\n\n        _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  };\n\n  _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n    var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n\n    var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    var isWalkingForward = this.mediaIndex !== null;\n    var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: function endedTimelineFn() {\n        _this5.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: function onTransmuxerLog(_ref8) {\n        var message = _ref8.message,\n            level = _ref8.level,\n            stream = _ref8.stream;\n\n        _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n  ;\n\n  _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n  ;\n\n  _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n\n    return simpleSegment;\n  };\n\n  _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  };\n\n  _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  };\n\n  _proto.handleTimeout_ = function handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  };\n\n  _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n    var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  };\n\n  _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  };\n\n  _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n    var currentStart = _ref9.currentStart,\n        playlist = _ref9.playlist,\n        mediaIndex = _ref9.mediaIndex,\n        firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n        currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n        useVideoTimingInfo = _ref9.useVideoTimingInfo,\n        videoTimingInfo = _ref9.videoTimingInfo,\n        audioTimingInfo = _ref9.audioTimingInfo;\n\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n\n    var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n\n    return videoTimingInfo.start;\n  };\n\n  _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n    var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n    var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  };\n\n  _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n\n    segmentInfo.waitingOnAppends--;\n\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  };\n\n  _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n\n    var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  };\n\n  _proto.getSegmentStartTimeForTimestampOffsetCalculation_ = function getSegmentStartTimeForTimestampOffsetCalculation_(_ref10) {\n    var videoTimingInfo = _ref10.videoTimingInfo,\n        audioTimingInfo = _ref10.audioTimingInfo,\n        timingInfo = _ref10.timingInfo;\n\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n\n    return timingInfo.start;\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    var trackInfo = this.getMediaInfo_();\n    var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleAppendsDone_ = function handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n\n    var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n        return;\n      }\n    }\n\n    this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n      this.resetEverything();\n      return;\n    }\n\n    var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n\n    this.trigger('appended');\n\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n  ;\n\n  _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n  ;\n\n  _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    var value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs.EventTarget);\n\nfunction noop() {}\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n\nvar bufferTypes = ['video', 'audio'];\n\nvar _updating = function updating(type, sourceUpdater) {\n  var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\n\nvar nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n  for (var i = 0; i < queue.length; i++) {\n    var queueEntry = queue[i];\n\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nvar shiftQueue = function shiftQueue(type, sourceUpdater) {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n\n  var queueIndex = 0;\n  var queueEntry = sourceUpdater.queue[queueIndex];\n\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n\n    return;\n  }\n\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n    return;\n  }\n\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\n\nvar cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n  var buffer = sourceUpdater[type + \"Buffer\"];\n  var titleType = toTitleCase(type);\n\n  if (!buffer) {\n    return;\n  }\n\n  buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n  buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[type + \"Buffer\"] = null;\n};\n\nvar inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n  return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n};\n\nvar actions = {\n  appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.appendBuffer(bytes);\n      } catch (e) {\n        sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n        sourceUpdater.queuePending[type] = null;\n        onError(e);\n      }\n    };\n  },\n  remove: function remove(start, end) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.remove(start, end);\n      } catch (e) {\n        sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n      }\n    };\n  },\n  timestampOffset: function timestampOffset(offset) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n      sourceBuffer.timestampOffset = offset;\n    };\n  },\n  callback: function callback(_callback) {\n    return function (type, sourceUpdater) {\n      _callback();\n    };\n  },\n  endOfStream: function endOfStream(error) {\n    return function (sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n      try {\n        sourceUpdater.mediaSource.endOfStream(error);\n      } catch (e) {\n        videojs.log.warn('Failed to call media source endOfStream', e);\n      }\n    };\n  },\n  duration: function duration(_duration) {\n    return function (sourceUpdater) {\n      sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n      try {\n        sourceUpdater.mediaSource.duration = _duration;\n      } catch (e) {\n        videojs.log.warn('Failed to set media source duration', e);\n      }\n    };\n  },\n  abort: function abort() {\n    return function (type, sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.abort();\n      } catch (e) {\n        videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  addSourceBuffer: function addSourceBuffer(type, codec) {\n    return function (sourceUpdater) {\n      var titleType = toTitleCase(type);\n      var mime = getMimeForCodec(codec);\n      sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n      var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n      sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n      sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n      sourceUpdater.codecs[type] = codec;\n      sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n    };\n  },\n  removeSourceBuffer: function removeSourceBuffer(type) {\n    return function (sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n      try {\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n      } catch (e) {\n        videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  changeType: function changeType(codec) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      } // do not update codec if we don't need to.\n\n\n      if (sourceUpdater.codecs[type] === codec) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    };\n  }\n};\n\nvar pushQueue = function pushQueue(_ref) {\n  var type = _ref.type,\n      sourceUpdater = _ref.sourceUpdater,\n      action = _ref.action,\n      doneFn = _ref.doneFn,\n      name = _ref.name;\n  sourceUpdater.queue.push({\n    type: type,\n    action: action,\n    doneFn: doneFn,\n    name: name\n  });\n  shiftQueue(type, sourceUpdater);\n};\n\nvar onUpdateend = function onUpdateend(type, sourceUpdater) {\n  return function (e) {\n    // Although there should, in theory, be a pending action for any updateend receieved,\n    // there are some actions that may trigger updateend events without set definitions in\n    // the w3c spec. For instance, setting the duration on the media source may trigger\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\n    // if we encounter an updateend without a corresponding pending action from our queue\n    // for that source buffer type, process the next action.\n    if (sourceUpdater.queuePending[type]) {\n      var doneFn = sourceUpdater.queuePending[type].doneFn;\n      sourceUpdater.queuePending[type] = null;\n\n      if (doneFn) {\n        // if there's an error, report it\n        doneFn(sourceUpdater[type + \"Error_\"]);\n      }\n    }\n\n    shiftQueue(type, sourceUpdater);\n  };\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\n\nvar SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n  function SourceUpdater(mediaSource) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.mediaSource = mediaSource;\n\n    _this.sourceopenListener_ = function () {\n      return shiftQueue('mediaSource', _assertThisInitialized(_this));\n    };\n\n    _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n    _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    _this.audioTimestampOffset_ = 0;\n    _this.videoTimestampOffset_ = 0;\n    _this.queue = [];\n    _this.queuePending = {\n      audio: null,\n      video: null\n    };\n    _this.delayedAudioAppendQueue_ = [];\n    _this.videoAppendQueued_ = false;\n    _this.codecs = {};\n    _this.onVideoUpdateEnd_ = onUpdateend('video', _assertThisInitialized(_this));\n    _this.onAudioUpdateEnd_ = onUpdateend('audio', _assertThisInitialized(_this));\n\n    _this.onVideoError_ = function (e) {\n      // used for debugging\n      _this.videoError_ = e;\n    };\n\n    _this.onAudioError_ = function (e) {\n      // used for debugging\n      _this.audioError_ = e;\n    };\n\n    _this.createdSourceBuffers_ = false;\n    _this.initializedEme_ = false;\n    _this.triggeredReady_ = false;\n    return _this;\n  }\n\n  var _proto = SourceUpdater.prototype;\n\n  _proto.initializedEme = function initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  };\n\n  _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  };\n\n  _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n    return this.initializedEme_;\n  };\n\n  _proto.ready = function ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  };\n\n  _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  };\n\n  _proto.triggerReady = function triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n  ;\n\n  _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n  ;\n\n  _proto.abort = function abort(type) {\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n  ;\n\n  _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n  ;\n\n  _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  SourceUpdater.canChangeType = function canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  _proto.canChangeType = function canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n  ;\n\n  _proto.changeType = function changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n  ;\n\n  _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n    var _this2 = this;\n\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n\n    Object.keys(codecs).forEach(function (type) {\n      var codec = codecs[type];\n\n      if (!_this2.hasCreatedSourceBuffers()) {\n        return _this2.addSourceBuffer(type, codec);\n      }\n\n      if (_this2.canChangeType()) {\n        _this2.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n  ;\n\n  _proto.appendBuffer = function appendBuffer(options, doneFn) {\n    var _this3 = this;\n\n    var segmentInfo = options.segmentInfo,\n        type = options.type,\n        bytes = options.bytes;\n    this.processedAppend_ = true;\n\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n\n    var onError = doneFn;\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn: doneFn,\n      name: 'appendBuffer'\n    });\n\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n\n      var queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(function (que) {\n        _this3.appendBuffer.apply(_this3, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n  ;\n\n  _proto.audioBuffered = function audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n  ;\n\n  _proto.videoBuffered = function videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n  ;\n\n  _proto.setDuration = function setDuration(duration, doneFn) {\n    if (doneFn === void 0) {\n      doneFn = noop;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n  ;\n\n  _proto.endOfStream = function endOfStream(error, doneFn) {\n    if (error === void 0) {\n      error = null;\n    }\n\n    if (doneFn === void 0) {\n      doneFn = noop;\n    }\n\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeAudio = function removeAudio(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeVideo = function removeVideo(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n  ;\n\n  _proto.updating = function updating() {\n    // the audio/video source buffer is updating\n    if (_updating('audio', this) || _updating('video', this)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.audioQueueCallback = function audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.videoQueueCallback = function videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this4 = this;\n\n    this.trigger('dispose');\n    bufferTypes.forEach(function (type) {\n      _this4.abort(type);\n\n      if (_this4.canRemoveSourceBuffer()) {\n        _this4.removeSourceBuffer(type);\n      } else {\n        _this4[type + \"QueueCallback\"](function () {\n          return cleanupBuffer(type, _this4);\n        });\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n\n    this.off();\n  };\n\n  return SourceUpdater;\n}(videojs.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n  return _char3.charCodeAt(0);\n}));\n\nvar NoVttJsError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(NoVttJsError, _Error);\n\n  function NoVttJsError() {\n    return _Error.call(this, 'Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.') || this;\n  }\n\n  return NoVttJsError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n  _inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.loaderType_ = 'subtitle';\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    _this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    _this.shouldSaveSegmentTimingInfo_ = false;\n    return _this;\n  }\n\n  var _proto = VTTSegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return videojs.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n    return videojs.createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n  ;\n\n  _proto.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n  ;\n\n  _proto.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    var _this2 = this; // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this2.state = 'READY';\n\n        if (!_this2.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this2.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n    return null;\n  };\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n  ;\n\n  _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n\n    return segmentInfo;\n  };\n\n  _proto.stopForError = function stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    var _this3 = this;\n\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n\n      this.stopForError(error);\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    var segment = segmentInfo.segment;\n\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(function () {\n        return _this3.segmentRequestFinished_(error, simpleSegment, result);\n      }, function () {\n        return _this3.stopForError({\n          message: 'Error loading vtt.js'\n        });\n      });\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  };\n\n  _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n  ;\n\n  _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder;\n    var decodeBytesToString = false;\n\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n    parser.ontimestampmap = function (map) {\n      segmentInfo.timestampmap = map;\n    };\n\n    parser.onparsingerror = function (error) {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n  ;\n\n  _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n            adOffset = _segment$cueOutCont$s[0],\n            adTotal = _segment$cueOutCont$s[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n}; // synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\n\nvar MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (duration !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n\n    var syncPoint = null;\n    var lastDistance = null;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n\n      var segmentTime = segment.dateTimeObject.getTime() / 1000;\n      var start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (var z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n\n      var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n    var partsAndSegments = getPartsAndSegments(playlist);\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SyncController, _videojs$EventTarget);\n\n  function SyncController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.timelineToDatetimeMappings = {};\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n\n  var _proto = SyncController.prototype;\n\n  _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n  ;\n\n  _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n  ;\n\n  _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n  ;\n\n  _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n  ;\n\n  _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n  ;\n\n  _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var firstSegment = playlist.segments[0];\n      var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n  ;\n\n  _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n    var segmentInfo = _ref.segmentInfo,\n        shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n    var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    var segment = segmentInfo.segment;\n\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n\n    var dateTime = segment.dateTimeObject;\n\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  };\n\n  _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].time;\n  };\n\n  _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n  ;\n\n  _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n    var start;\n    var end;\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n      }\n\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n  ;\n\n  _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.off();\n  };\n\n  return SyncController;\n}(videojs.EventTarget);\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\n\nvar TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n  function TimelineChangeController() {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.pendingTimelineChanges_ = {};\n    _this.lastTimelineChanges_ = {};\n    return _this;\n  }\n\n  var _proto = TimelineChangeController.prototype;\n\n  _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  };\n\n  _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n    var type = _ref.type,\n        from = _ref.from,\n        to = _ref.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n\n    return this.pendingTimelineChanges_[type];\n  };\n\n  _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n    var type = _ref2.type,\n        from = _ref2.from,\n        to = _ref2.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n\n    return this.lastTimelineChanges_[type];\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  };\n\n  return TimelineChangeController;\n}(videojs.EventTarget);\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\n\n\nvar workerCode = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function require(path, base) {\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n\n  var createClass = createCommonjsModule(function (module) {\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    module.exports = _createClass;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var inheritsLoose = createCommonjsModule(function (module) {\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      setPrototypeOf(subClass, superClass);\n    }\n\n    module.exports = _inheritsLoose;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n\n  var precompute = function precompute() {\n    var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    var encTable = tables[0];\n    var decTable = tables[1];\n    var sbox = encTable[4];\n    var sboxInv = decTable[4];\n    var i;\n    var x;\n    var xInv;\n    var d = [];\n    var th = [];\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n\n    return tables;\n  };\n\n  var aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  var AES = /*#__PURE__*/function () {\n    function AES(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      var i;\n      var j;\n      var tmp;\n      var sbox = this._tables[0][4];\n      var decTable = this._tables[1];\n      var keyLen = key.length;\n      var rcon = 1;\n\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n\n      var encKey = key.slice(0);\n      var decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n\n    var _proto = AES.prototype;\n\n    _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2;\n      var b2;\n      var c2; // key.length === 2 ?\n\n      var nInnerRounds = key.length / 4 - 2;\n      var i;\n      var kIndex = 4;\n      var table = this._tables[1]; // load up the tables\n\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    };\n\n    return AES;\n  }();\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n\n  var AsyncStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(AsyncStream, _Stream);\n\n    function AsyncStream() {\n      var _this;\n\n      _this = _Stream.call(this, Stream) || this;\n      _this.jobs = [];\n      _this.delay = 1;\n      _this.timeout_ = null;\n      return _this;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n\n    var _proto = AsyncStream.prototype;\n\n    _proto.processJob_ = function processJob_() {\n      this.jobs.shift()();\n\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n    ;\n\n    _proto.push = function push(job) {\n      this.jobs.push(job);\n\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    };\n\n    return AsyncStream;\n  }(Stream);\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n\n  var ntoh = function ntoh(word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n\n  var decrypt = function decrypt(encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    var init0;\n    var init1;\n    var init2;\n    var init3;\n    var encrypted0;\n    var encrypted1;\n    var encrypted2;\n    var encrypted3; // iteration variable\n\n    var wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n\n  var Decrypter = /*#__PURE__*/function () {\n    function Decrypter(encrypted, key, initVector, done) {\n      var step = Decrypter.STEP;\n      var encrypted32 = new Int32Array(encrypted.buffer);\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n\n    var _proto = Decrypter.prototype;\n    /**\n     * @private\n     */\n\n    _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    };\n\n    createClass(Decrypter, null, [{\n      key: \"STEP\",\n      get: function get() {\n        // 4 * 8000;\n        return 32000;\n      }\n    }]);\n    return Decrypter;\n  }();\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n\n  self.onmessage = function (event) {\n    var data = event.data;\n    var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup || activeGroup.isMasterPlaylist) {\n      // there is no group active or active group is a main playlist and won't change\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onGroupChanging = function onGroupChanging(type, settings) {\n  return function () {\n    var segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    mediaType.lastGroup_ = null;\n    segmentLoader.abort();\n    segmentLoader.pause();\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (activeGroup.isMasterPlaylist) {\n      // track did not change, do nothing\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n        return;\n      }\n\n      var mpc = settings.vhs.masterPlaylistController_;\n      var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n      if (mpc.media() === newPlaylist) {\n        return;\n      }\n\n      mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n      masterPlaylistLoader.pause();\n      mainSegmentLoader.resetEverything();\n      mpc.fastQualityChange_(newPlaylist);\n      return;\n    }\n\n    if (type === 'AUDIO') {\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\n        // playlist loader for the audio group), we want to do a destructive reset of the\n        // main segment loader and not restart the audio loaders\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n        // it should be stopped\n\n        mainSegmentLoader.resetEverything();\n        return;\n      } // although the segment loader is an audio segment loader, call the setAudio\n      // function to ensure it is prepared to re-append the init segment (or handle other\n      // config changes)\n\n\n      segmentLoader.setAudio(true);\n      mainSegmentLoader.setAudio(false);\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        logger_ = _settings$mediaTypes$.logger_,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n    var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n\n      if (audioOnlyMaster) {\n        mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n      }\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (audioOnlyMaster) {\n          logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n          properties.isMasterPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          var playlists = properties.playlists.filter(function (p) {\n            return p.excludeUntil !== Infinity;\n          });\n\n          if (!playlists.length) {\n            return;\n          }\n\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          \"default\": properties[\"default\"] && properties.autoselect\n        };\n\n        if (captionServices[newProps.instreamId]) {\n          newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n        }\n\n        if (newProps[\"default\"] === undefined) {\n          delete newProps[\"default\"];\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            \"default\": newProps[\"default\"],\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\nvar groupMatch = function groupMatch(list, media) {\n  for (var i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null; // set to variants to main media active group\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    var groupKeys = Object.keys(groups);\n\n    if (!variants) {\n      // find the masterPlaylistLoader media\n      // that is in a media group if we are dealing\n      // with audio only\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n        for (var i = 0; i < groupKeys.length; i++) {\n          var groupPropertyList = groups[groupKeys[i]];\n\n          if (groupMatch(groupPropertyList, media)) {\n            variants = groupPropertyList;\n            break;\n          }\n        } // use the main group if it exists\n\n      } else if (groups.main) {\n        variants = groups.main; // only one group, use that one\n      } else if (groupKeys.length === 1) {\n        variants = groups[groupKeys[0]];\n      }\n    }\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null || !variants) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\nvar getActiveGroup = function getActiveGroup(type, _ref) {\n  var mediaTypes = _ref.mediaTypes;\n  return function () {\n    var activeTrack_ = mediaTypes[type].activeTrack();\n\n    if (!activeTrack_) {\n      return null;\n    }\n\n    return mediaTypes[type].activeGroup(activeTrack_);\n  };\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      vhs = settings.vhs,\n      _settings$segmentLoad3 = settings.segmentLoaders,\n      audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n      mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n  if (audioGroup) {\n    var groupId = (audioGroup.filter(function (group) {\n      return group[\"default\"];\n    })[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n  masterPlaylistLoader.on('mediachanging', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanging();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(\"MediaGroups[\" + type + \"]\")\n    };\n  });\n  return mediaTypes;\n};\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      buffered = _ref.buffered,\n      currentTime = _ref.currentTime,\n      nextPlaylist = _ref.nextPlaylist,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      bufferHighWaterLine = _ref.bufferHighWaterLine,\n      duration = _ref.duration,\n      experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n\n  var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n  if (!currentPlaylist) {\n    log(sharedLogLine + \" as current playlist is not set\");\n    return true;\n  } // no need to switch if playlist is the same\n\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n\n  var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n      return false;\n    }\n\n    log(sharedLogLine + \" as current playlist is live\");\n    return true;\n  }\n\n  var forwardBuffer = timeAheadOf(buffered, currentTime);\n  var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n    return true;\n  }\n\n  var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n    if (experimentalBufferBasedABR) {\n      logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n    }\n\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n\n  if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n    if (experimentalBufferBasedABR) {\n      _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n    }\n\n    log(_logLine);\n    return true;\n  }\n\n  log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    var src = options.src,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externVhs = options.externVhs,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n        experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n        captionServices = options.captionServices;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n\n    var maxPlaylistRetries = options.maxPlaylistRetries;\n\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n\n    Vhs$1 = externVhs;\n    _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n    _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.vhs_ = tech.vhs;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.maxPlaylistRetries = maxPlaylistRetries;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      maxPlaylistRetries: maxPlaylistRetries,\n      timeout: null\n    };\n\n    _this.on('error', _this.pauseLoading);\n\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new window$1.MediaSource();\n    _this.handleDurationChange_ = _this.handleDurationChange_.bind(_assertThisInitialized(_this));\n    _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(_assertThisInitialized(_this));\n    _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(_assertThisInitialized(_this));\n\n    _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n    _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n\n    _this.seekable_ = videojs.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter();\n    _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n    _this.inbandTextTracks_ = {};\n    _this.timelineChangeController_ = new TimelineChangeController();\n    var segmentLoaderSettings = {\n      vhs: _this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices: captionServices,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this.duration();\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys,\n      sourceUpdater: _this.sourceUpdater_,\n      timelineChangeController: _this.timelineChangeController_,\n      experimentalExactManifestTimings: options.experimentalExactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks,\n      loadVttJs: function loadVttJs() {\n        return new Promise(function (resolve, reject) {\n          function onLoad() {\n            tech.off('vttjserror', onError);\n            resolve();\n          }\n\n          function onError() {\n            tech.off('vttjsloaded', onLoad);\n            reject();\n          }\n\n          tech.one('vttjsloaded', onLoad);\n          tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n          tech.addWebVttScript_();\n        });\n      }\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    if (_this.experimentalBufferBasedABR) {\n      _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n        return _this.startABRTimer_();\n      });\n\n      _this.tech_.on('pause', function () {\n        return _this.stopABRTimer_();\n      });\n\n      _this.tech_.on('play', function () {\n        return _this.startABRTimer_();\n      });\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_assertThisInitialized(_this), stat);\n    });\n    _this.logger_ = logger('MPC');\n    _this.triggeredFmp4Usage = false;\n\n    if (_this.tech_.preload() === 'none') {\n      _this.loadOnPlay_ = function () {\n        _this.loadOnPlay_ = null;\n\n        _this.masterPlaylistLoader_.load();\n      };\n\n      _this.tech_.one('play', _this.loadOnPlay_);\n    } else {\n      _this.masterPlaylistLoader_.load();\n    }\n\n    _this.timeToLoadedData__ = -1;\n    _this.mainAppendsToLoadedData__ = -1;\n    _this.audioAppendsToLoadedData__ = -1;\n    var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    _this.tech_.one(event, function () {\n      var timeToLoadedDataStart = Date.now();\n\n      _this.tech_.one('loadeddata', function () {\n        _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n        _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = MasterPlaylistController.prototype;\n\n  _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  };\n\n  _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  };\n\n  _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n    var main = this.mainAppendsToLoadedData_();\n    var audio = this.audioAppendsToLoadedData_();\n\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n\n    return main + audio;\n  };\n\n  _proto.timeToLoadedData_ = function timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n  ;\n\n  _proto.checkABR_ = function checkABR_(reason) {\n    if (reason === void 0) {\n      reason = 'abr';\n    }\n\n    var nextPlaylist = this.selectPlaylist();\n\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  };\n\n  _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n    var oldMedia = this.media();\n    var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    var newId = playlist.id || playlist.uri;\n\n    if (oldId && oldId !== newId) {\n      this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-rendition-change-\" + cause\n      });\n    }\n\n    this.masterPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.startABRTimer_ = function startABRTimer_() {\n    var _this2 = this;\n\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(function () {\n      return _this2.checkABR_();\n    }, 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.stopABRTimer_ = function stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n  ;\n\n  _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n    var master = this.master();\n    var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in masters\n    // playlist array, use that or an empty array.\n\n    if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n\n    var AUDIO = master.mediaGroups.AUDIO;\n    var groupKeys = Object.keys(AUDIO);\n    var track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n      for (var label in defaultGroup) {\n        if (defaultGroup[label][\"default\"]) {\n          track = {\n            label: label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n\n    var playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (var group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        var properties = AUDIO[group][track.label];\n\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (master.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (var i = 0; i < master.playlists.length; i++) {\n            var playlist = master.playlists[i];\n\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n\n    return playlists;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this3 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n\n      if (media.endList && _this3.tech_.preload() !== 'none') {\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this3.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this3.audioSegmentLoader_,\n          SUBTITLES: _this3.subtitleSegmentLoader_,\n          main: _this3.mainSegmentLoader_\n        },\n        tech: _this3.tech_,\n        requestOptions: _this3.requestOptions_,\n        masterPlaylistLoader: _this3.masterPlaylistLoader_,\n        vhs: _this3.vhs_,\n        master: _this3.master(),\n        mediaTypes: _this3.mediaTypes_,\n        blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n      });\n\n      _this3.triggerPresenceUsage_(_this3.master(), media);\n\n      _this3.setupFirstPlay();\n\n      if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        _this3.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n          _this3.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      if (_this3.loadOnPlay_) {\n        _this3.tech_.off('play', _this3.loadOnPlay_);\n      }\n\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this3.excludeUnsupportedVariants_();\n\n        var selectedMedia;\n\n        if (_this3.enableLowInitialPlaylist) {\n          selectedMedia = _this3.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this3.selectPlaylist();\n        }\n\n        if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n\n        _this3.initialMedia_ = selectedMedia;\n\n        _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n\n        var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n        if (!haveJsonSource) {\n          return;\n        }\n\n        updatedPlaylist = _this3.initialMedia_;\n      }\n\n      _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.masterPlaylistLoader_.on('error', function () {\n      _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n    });\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this3.mainSegmentLoader_.abort();\n\n      _this3.mainSegmentLoader_.pause();\n    });\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      }\n\n      _this3.masterPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n\n      _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n      _this3.mainSegmentLoader_.load();\n\n      _this3.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n\n      var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this3.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.',\n          reason: 'playlist-unchanged'\n        }); // useful for monitoring QoS\n\n\n        _this3.tech_.trigger('playliststuck');\n      }\n    });\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-disabled'\n      });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n  ;\n\n  _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-demuxed'\n      });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-webvtt'\n      });\n    }\n\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-aes'\n      });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-alternate-audio'\n      });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-playlist-cue-tags'\n      });\n    }\n  };\n\n  _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n    var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n    var currentTime = this.tech_.currentTime();\n    var bufferLowWaterLine = this.bufferLowWaterLine();\n    var bufferHighWaterLine = this.bufferHighWaterLine();\n    var buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered: buffered,\n      currentTime: currentTime,\n      currentPlaylist: currentPlaylist,\n      nextPlaylist: nextPlaylist,\n      bufferLowWaterLine: bufferLowWaterLine,\n      bufferHighWaterLine: bufferHighWaterLine,\n      duration: this.duration(),\n      experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this4 = this;\n\n    this.mainSegmentLoader_.on('bandwidthupdate', function () {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      _this4.checkABR_('bandwidthupdate');\n\n      _this4.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', function () {\n      if (_this4.experimentalBufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        _this4.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.experimentalBufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', function () {\n        _this4.trigger('progress');\n      });\n    }\n\n    this.mainSegmentLoader_.on('error', function () {\n      _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n    });\n    this.mainSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.mainSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'hls-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.audioSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', function () {\n      _this4.logger_('main segment loader ended');\n\n      _this4.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', function (event) {\n      // never try to early abort with the new ABR algorithm\n      if (_this4.experimentalBufferBasedABR) {\n        return;\n      }\n\n      _this4.delegateLoaders_('all', ['abort']);\n\n      _this4.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n\n    var updateCodecs = function updateCodecs() {\n      if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return _this4.tryToCreateSourceBuffers_();\n      }\n\n      var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n      if (!codecs) {\n        return;\n      }\n\n      _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', function () {\n      _this4.logger_('audioSegmentLoader ended');\n\n      _this4.onEndOfStream();\n    });\n  };\n\n  _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n  ;\n\n  _proto.load = function load() {\n    this.mainSegmentLoader_.load();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions without performing destructive actions, like\n   * removing already buffered content\n   *\n   * @private\n   * @deprecated\n   */\n  ;\n\n  _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    this.fastQualityChange_(media);\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n  ;\n\n  _proto.fastQualityChange_ = function fastQualityChange_(media) {\n    var _this5 = this;\n\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    if (media === this.masterPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(function () {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n      } else {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n  ;\n\n  _proto.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_) {\n      this.load();\n    }\n\n    var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n  ;\n\n  _proto.setupFirstPlay = function setupFirstPlay() {\n    var _this6 = this;\n\n    var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n\n    if (!media.endList) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this6.trigger('firstplay');\n\n          _this6.tech_.setCurrentTime(seekable.end(0));\n\n          _this6.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceEnded_ = function handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n\n    var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n    if (!cues || !cues.length) {\n      return;\n    }\n\n    var duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleDurationChange_ = function handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n  ;\n\n  _proto.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (!isEndOfStream) {\n      return;\n    }\n\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n  ;\n\n  _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable = this.seekable();\n\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n\n    var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n\n    var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n  ;\n\n  _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n    if (error === void 0) {\n      error = {};\n    } // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n\n\n    var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n\n    if (!currentPlaylist) {\n      this.error = error;\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n\n      return;\n    }\n\n    currentPlaylist.playlistErrors_++;\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var enabledPlaylists = playlists.filter(isEnabled);\n    var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n    // forever\n\n    if (playlists.length === 1 && blacklistDuration !== Infinity) {\n      videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    }\n\n    if (isFinalRendition) {\n      // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // blacklist. This allows other playlists to be attempted in case any have been\n      // fixed.\n      var reincluded = false;\n      playlists.forEach(function (playlist) {\n        // skip current playlist which is about to be blacklisted\n        if (playlist === currentPlaylist) {\n          return;\n        }\n\n        var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Blacklist this playlist\n\n\n    var excludeUntil;\n\n    if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + blacklistDuration * 1000;\n    }\n\n    currentPlaylist.excludeUntil = excludeUntil;\n\n    if (error.reason) {\n      currentPlaylist.lastExcludeReason_ = error.reason;\n    }\n\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-blacklisted'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-rendition-blacklisted'\n    }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n    // Would be something like media().id !=== currentPlaylist.id and we  would need something\n    // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n    // from loading a new playlist on any blacklist.\n    // Select a new playlist\n\n    var nextPlaylist = this.selectPlaylist();\n\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n\n    var logFn = error.internal ? this.logger_ : videojs.log.warn;\n    var errorMessage = error.message ? ' ' + error.message : '';\n    logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n\n    if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n  ;\n\n  _proto.pauseLoading = function pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main/master loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n  ;\n\n  _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n    var _this7 = this;\n\n    var loaders = [];\n    var dontFilterPlaylist = filter === 'all';\n\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.masterPlaylistLoader_);\n    }\n\n    var mediaTypes = [];\n\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n\n    mediaTypes.forEach(function (mediaType) {\n      var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(function (name) {\n      var loader = _this7[name + \"SegmentLoader_\"];\n\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(function (loader) {\n      return fnNames.forEach(function (fnName) {\n        if (typeof loader[fnName] === 'function') {\n          loader[fnName]();\n        }\n      });\n    });\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n  ;\n\n  _proto.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    var master = this.masterPlaylistLoader_.master;\n    var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    var oldEnd;\n    var oldStart;\n\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n\n    this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n  ;\n\n  _proto.updateDuration = function updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n\n    if (isLive) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n\n      return;\n    }\n\n    var buffered = this.tech_.buffered();\n    var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this8 = this;\n\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this8.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n  ;\n\n  _proto.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n  ;\n\n  _proto.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n\n  _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n    var _this9 = this;\n\n    var media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    var playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    var playlistCodecs = codecsForPlaylist(this.master(), playlist);\n    var codecs = {};\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n\n    if (media.main.isMuxed) {\n      codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n    }\n\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n\n    if (!codecs.audio && !codecs.video) {\n      this.blacklistCurrentPlaylist({\n        playlist: playlist,\n        message: 'Could not determine codecs for playlist.',\n        blacklistDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n    var supportFunction = function supportFunction(isFmp4, codec) {\n      return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    };\n\n    var unsupportedCodecs = {};\n    var unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      var audioGroup = playlist.attributes.AUDIO;\n      this.master().playlists.forEach(function (variant) {\n        var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n    } // if we have any unsupported codecs blacklist this playlist.\n\n\n    if (Object.keys(unsupportedCodecs).length) {\n      var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n        if (acc) {\n          acc += ', ';\n        }\n\n        acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n        return acc;\n      }, '') + '.';\n      this.blacklistCurrentPlaylist({\n        playlist: playlist,\n        internal: true,\n        message: message,\n        blacklistDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      var switchMessages = [];\n      ['video', 'audio'].forEach(function (type) {\n        var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n        }\n      });\n\n      if (switchMessages.length) {\n        this.blacklistCurrentPlaylist({\n          playlist: playlist,\n          message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n          blacklistDuration: Infinity,\n          internal: true\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n  ;\n\n  _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n\n    var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n  ;\n\n  _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    var _this10 = this;\n\n    var playlists = this.master().playlists;\n    var ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var codecs = codecsForPlaylist(_this10.master, variant);\n      var unsupported = [];\n\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(\"audio codec \" + codecs.audio);\n      }\n\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(\"video codec \" + codecs.video);\n      }\n\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(\"text codec \" + codecs.text);\n      }\n\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n\n        _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n      }\n    });\n  }\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n  ;\n\n  _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n    var _this11 = this;\n\n    var ids = [];\n    var playlists = this.master().playlists;\n    var codecs = unwrapCodecList(parseCodecs(codecString));\n    var codecCount_ = codecCount(codecs);\n    var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var blacklistReasons = []; // get codecs from the playlist for this variant\n\n      var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n      var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n\n      if (variantCodecCount !== codecCount_) {\n        blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n\n      if (!_this11.sourceUpdater_.canChangeType()) {\n        var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n        } // the audio codec cannot change\n\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n        }\n      }\n\n      if (blacklistReasons.length) {\n        variant.excludeUntil = Infinity;\n\n        _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n      }\n    });\n  };\n\n  _proto.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable = this.seekable();\n\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n  ;\n\n  _proto.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n  ;\n\n  _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n  };\n\n  _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  };\n\n  return MasterPlaylistController;\n}(videojs.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(vhsHandler, playlist, id) {\n  var mpc = vhsHandler.masterPlaylistController_,\n      smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution && resolution.width;\n    this.height = resolution && resolution.height;\n    this.bandwidth = playlist.attributes.BANDWIDTH;\n    this.frameRate = playlist.attributes['FRAME-RATE'];\n  }\n\n  this.codecs = codecsForPlaylist(mpc.master(), playlist);\n  this.playlist = playlist; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = function () {\n    var master = vhsHandler.masterPlaylistController_.master();\n    var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n    if (!playlists) {\n      return [];\n    }\n\n    return playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(vhsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = /*#__PURE__*/function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    this.masterPlaylistController_ = options.masterPlaylistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var playHandler = function playHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var mpc = this.masterPlaylistController_;\n    var loaderTypes = ['main', 'subtitle', 'audio'];\n    var loaderChecks = {};\n    loaderTypes.forEach(function (type) {\n      loaderChecks[type] = {\n        reset: function reset() {\n          return _this.resetSegmentDownloads_(type);\n        },\n        updateend: function updateend() {\n          return _this.checkSegmentDownloads_(type);\n        }\n      };\n      mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    var setSeekingHandlers = function setSeekingHandlers(fn) {\n      ['main', 'audio'].forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n      });\n    };\n\n    this.seekingAppendCheck_ = function () {\n      if (_this.fixesBadSeeks_()) {\n        _this.consecutiveUpdates = 0;\n        _this.lastRecordedTime = _this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n\n    this.clearSeekingAppendCheck_ = function () {\n      return setSeekingHandlers('off');\n    };\n\n    this.watchForBadSeeking_ = function () {\n      _this.clearSeekingAppendCheck_();\n\n      setSeekingHandlers('on');\n    };\n\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.clearSeekingAppendCheck_();\n\n      _this.logger_('dispose');\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      _this.tech_.off('play', playHandler);\n\n      _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n      _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n      loaderTypes.forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n        mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n        _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  var _proto = PlaybackWatcher.prototype;\n\n  _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n  ;\n\n  _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n    var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n    if (this[type + \"StalledDownloads_\"] > 0) {\n      this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n    }\n\n    this[type + \"StalledDownloads_\"] = 0;\n    this[type + \"Buffered_\"] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We blacklist the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n  ;\n\n  _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n    var mpc = this.masterPlaylistController_;\n    var loader = mpc[type + \"SegmentLoader_\"];\n    var buffered = loader.buffered_();\n    var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n    this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n\n    this[type + \"StalledDownloads_\"]++;\n    this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[type + \"StalledDownloads_\"] < 10) {\n      return;\n    }\n\n    this.logger_(type + \" loader stalled download exclusion\");\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: \"vhs-\" + type + \"-download-exclusion\"\n    });\n\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n\n    mpc.blacklistCurrentPlaylist({\n      message: \"Excessive \" + type + \" segment downloading detected.\"\n    }, Infinity);\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n  ;\n\n  _proto.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n  ;\n\n  _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    var seekTo;\n\n    if (isAfterSeekableRange) {\n      var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    var media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    var bufferedToCheck = [audioBuffered, videoBuffered];\n\n    for (var i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n\n      var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n  ;\n\n  _proto.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n  ;\n\n  _proto.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n      this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-live-resync'\n      });\n      return true;\n    }\n\n    var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime: currentTime\n    });\n\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-video-underflow'\n      });\n      return true;\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n      this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n      this.cancelTimer_();\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n    return false;\n  };\n\n  _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n    if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n      allowSeeksWithinUnsafeLiveWindow = false;\n    }\n\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    var isLive = !playlist.endList;\n\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n    var videoBuffered = _ref.videoBuffered,\n        audioBuffered = _ref.audioBuffered,\n        currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n    if (!videoBuffered) {\n      return;\n    }\n\n    var gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      var videoRange = findRange(videoBuffered, currentTime);\n      var audioRange = findRange(audioBuffered, currentTime);\n\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n\n    } else {\n      var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n\n    if (gap) {\n      this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n  ;\n\n  _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-gap-skip'\n    });\n  };\n\n  _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$4 = \"2.16.2\";\nvar version$3 = \"6.0.1\";\nvar version$2 = \"0.22.1\";\nvar version$1 = \"4.8.0\";\nvar version = \"3.1.3\";\nvar Vhs = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector: lastBandwidthSelector,\n  movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(function (prop) {\n  Object.defineProperty(Vhs, prop, {\n    get: function get() {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n      return Config[prop];\n    },\n    set: function set(value) {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nvar handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\n\nvar handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n  vhs.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var codecs = {};\n\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n\n  var videoContentType = getMimeForCodec(codecs.video);\n  var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\n\nvar getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n  return playlists.reduce(function (keySystemsArr, playlist) {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n\n    var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n      var keySystemOptions = playlist.contentProtection[keySystem];\n\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n\n      return keySystemsObj;\n    }, {});\n\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the master playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\n\nvar waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n  var player = _ref.player,\n      sourceKeySystems = _ref.sourceKeySystems,\n      audioMedia = _ref.audioMedia,\n      mainPlaylists = _ref.mainPlaylists;\n\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n\n  var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  var initializationFinishedPromises = [];\n  var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n    keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([// If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\n\nvar setupEmeOptions = function setupEmeOptions(_ref2) {\n  var player = _ref2.player,\n      sourceKeySystems = _ref2.sourceKeySystems,\n      media = _ref2.media,\n      audioMedia = _ref2.audioMedia;\n  var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n  if (!sourceOptions) {\n    return false;\n  }\n\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n\n  return true;\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window$1.localStorage) {\n    return null;\n  }\n\n  var storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window$1.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\n\nvar expandDataUri = function expandDataUri(dataUri) {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nVhs.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nVhs.isSupported = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar VhsHandler = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VhsHandler, _Component);\n\n  function VhsHandler(source, tech, options) {\n    var _this;\n\n    _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n    if (options.hls && Object.keys(options.hls).length) {\n      videojs.log.warn('Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.');\n    } // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n\n    if (typeof options.initialBandwidth === 'number') {\n      _this.options_.bandwidth = options.initialBandwidth;\n    }\n\n    _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('vhs')) {\n        Object.defineProperty(_player, 'vhs', {\n          get: function get() {\n            videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'vhs-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('dash')) {\n        Object.defineProperty(_player, 'dash', {\n          get: function get() {\n            videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        _this.masterPlaylistController_.checkABR_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have mpc loaded.\n      if (this.tech_.error() && this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  var _proto = VhsHandler.prototype;\n\n  _proto.setOptions_ = function setOptions_() {\n    var _this2 = this; // defaults\n\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    }\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        var storedObject = getVhsLocalStorage();\n\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-bandwidth-from-local-storage'\n          });\n        }\n\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n      if (typeof _this2.source_[option] !== 'undefined') {\n        _this2.options_[option] = _this2.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n  ;\n\n  _proto.src = function src(_src, type) {\n    var _this3 = this; // do nothing if the src is falsey\n\n\n    if (!_src) {\n      return;\n    }\n\n    this.setOptions_(); // add master playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = function (time) {\n      _this3.tech_.setCurrentTime(time);\n    };\n\n    if (this.options_.smoothQualityChange) {\n      videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n    }\n\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    var playbackWatcherOptions = videojs.mergeOptions({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: function seekable() {\n        return _this3.seekable();\n      },\n      media: function media() {\n        return _this3.masterPlaylistController_.media();\n      },\n      masterPlaylistController: this.masterPlaylistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs.players[_this3.tech_.options_.playerId];\n      var error = _this3.masterPlaylistController_.error;\n\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n\n      player.error(error);\n    });\n    var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get() {\n          var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          var networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          var tenMbpsAsBitsPerSecond = 10e6;\n\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n\n          return playerBandwidthEst;\n        },\n        set: function set(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set: function set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get() {\n          return _this3.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      mediaAppends: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaAppends_() || 0;\n        },\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get() {\n          return _this3.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get() {\n          return _this3.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get() {\n          return _this3.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get() {\n          return _this3.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get() {\n          return _this3.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get() {\n          return _this3.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get() {\n          return _this3.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n    this.tech_.on('bandwidthupdate', function () {\n      if (_this3.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: _this3.bandwidth,\n          throughput: Math.round(_this3.throughput)\n        });\n      }\n    });\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(_this3);\n    });\n    this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n      _this3.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  };\n\n  _proto.createKeySessions_ = function createKeySessions_() {\n    var _this4 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.master.playlists\n    }).then(function () {\n      _this4.logger_('created EME key session');\n\n      _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n    })[\"catch\"](function (err) {\n      _this4.logger_('error while creating EME key session', err);\n\n      _this4.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  };\n\n  _proto.handleWaitingForKey_ = function handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n  ;\n\n  _proto.setupEme_ = function setupEme_() {\n    var _this5 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    var didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', function (e) {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n\n      var masterPlaylist = _this5.masterPlaylistController_.master();\n\n      if (!masterPlaylist || !masterPlaylist.playlists) {\n        return;\n      }\n\n      var excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      masterPlaylist.playlists.forEach(function (playlist) {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n\n      if (excludedHDPlaylists.length) {\n        var _videojs$log;\n\n        (_videojs$log = videojs.log).warn.apply(_videojs$log, ['DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(excludedHDPlaylists)); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n\n        _this5.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.masterPlaylistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n  ;\n\n  _proto.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this6 = this;\n\n    var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n\n    this.qualityLevels_ = player.qualityLevels();\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      handleVhsLoadedMetadata(_this6.qualityLevels_, _this6);\n    });\n    this.playlists.on('mediachange', function () {\n      handleVhsMediaChange(_this6.qualityLevels_, _this6.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  VhsHandler.version = function version$5() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  _proto.version = function version() {\n    return this.constructor.version();\n  };\n\n  _proto.canChangeType = function canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n  ;\n\n  _proto.play = function play() {\n    this.masterPlaylistController_.play();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n\n    if (this.player_) {\n      delete this.player_.vhs;\n      delete this.player_.dash;\n      delete this.player_.hls;\n    }\n\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n    if (this.tech_) {\n      delete this.tech_.hls;\n    }\n\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.masterPlaylistController_.media(),\n      time: time,\n      callback: callback\n    });\n  } // the player must be playing before calling this\n  ;\n\n  _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n    if (pauseAfterSeek === void 0) {\n      pauseAfterSeek = true;\n    }\n\n    if (retryCount === void 0) {\n      retryCount = 2;\n    }\n\n    return seekToProgramTime({\n      programTime: programTime,\n      playlist: this.masterPlaylistController_.media(),\n      retryCount: retryCount,\n      pauseAfterSeek: pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback: callback\n    });\n  };\n\n  return VhsHandler;\n}(Component);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource: function canHandleSource(srcObj, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n\n    if (!videojs.hasOwnProperty('hls')) {\n      Object.defineProperty(tech, 'hls', {\n        get: function get() {\n          videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n          return tech.vhs;\n        },\n        configurable: true\n      });\n    }\n\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType: function canPlayType(type, options) {\n    var simpleType = simpleTypeFromSourceType(type);\n\n    if (!simpleType) {\n      return '';\n    }\n\n    var overrideNative = VhsSourceHandler.getOverrideNative(options);\n    var supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    var canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative: function getOverrideNative(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$vhs = _options.vhs,\n        vhs = _options$vhs === void 0 ? {} : _options$vhs,\n        _options$hls = _options.hls,\n        hls = _options$hls === void 0 ? {} : _options$hls;\n    var defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    var _vhs$overrideNative = vhs.overrideNative,\n        overrideNative = _vhs$overrideNative === void 0 ? defaultOverrideNative : _vhs$overrideNative;\n    var _hls$overrideNative = hls.overrideNative,\n        legacyOverrideNative = _hls$overrideNative === void 0 ? false : _hls$overrideNative;\n    return legacyOverrideNative || overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\n\nvideojs.VhsHandler = VhsHandler;\nObject.defineProperty(videojs, 'HlsHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n    return VhsHandler;\n  },\n  configurable: true\n});\nvideojs.VhsSourceHandler = VhsSourceHandler;\nObject.defineProperty(videojs, 'HlsSourceHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n    return VhsSourceHandler;\n  },\n  configurable: true\n});\nvideojs.Vhs = Vhs;\nObject.defineProperty(videojs, 'Hls', {\n  get: function get() {\n    videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n    return Vhs;\n  },\n  configurable: true\n});\n\nif (!videojs.use) {\n  videojs.registerComponent('Hls', Vhs);\n  videojs.registerComponent('Vhs', Vhs);\n}\n\nvideojs.options.vhs = videojs.options.vhs || {};\nvideojs.options.hls = videojs.options.hls || {};\n\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  var registerPlugin = videojs.registerPlugin || videojs.plugin;\n  registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs;\n"],"names":["browserApi","version$5","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","i","length","_i","history","log$1","createLogger$1","name","logByType","level","log","_len","arguments","args","Array","_key","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","info","test","isArray","LogByTypeFactory","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","toString","Object","prototype","keys","object","isObject","each","forEach","key","assign","target","sources","apply","source","value","isPlain","call","constructor","computedStyle","el","prop","computedStyleValue","e","getPropertyValue","match","USER_AGENT","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","maxTouchPoints","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","x","createQuerier","method","selector","context","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","parent","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","focus","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","this","vdata","floor","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","WeakMap","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","body","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","supportsPassive","opts","defineProperty","passiveEvents","on","guid","hash","handlersCopy","m","n","addEventListener","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","timeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","self","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set$1","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","setTimeout","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","clearTimeout","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","requestNamedAnimationFrame","_this5","cancelNamedAnimationFrame","cancelAnimationFrame","_this6","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","end","iterator","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","querySelector","shiftKey","allChildren","querySelectorAll","hasAttribute","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","crossOrigin","cors","withCredentials","tech_","err","response","responseBody","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","readyState","load","NONE","LOADING","LOADED","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","Set","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","onload","onerror","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","_this8","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","_middleware","mwFactory","mwrest","_mws$i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","h","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","div","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","substring","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newIndex","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","innerHTML","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","JSON","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","childNodes","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","getElementsByTagName","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","_this9","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this10","resolve","play_","_this11","isSrcReady","isSafariOrIOS","waitToPlay_","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this12","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this13","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","activeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this14","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","handleSrc_","isRetry","_this15","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","str1","str2","_this16","sourceTech","_this17","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","_ref3","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","_this18","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","_this19","playerChildren","controlBarHeight","disableAudioOnlyUI_","_this20","exitPromises","enablePosterModeUI_","disablePosterModeUI_","_this21","String","toJSON","createModal","_this22","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this23","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","hasPlugin","hasLogged","normalizeId","videojs","getPlayer","TypeError","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","superClass","subClassMethods","subClass","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","xhr","dom","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","printableRange","range","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","playlist","segment","parts","preloadHints","partTargetDuration","getPartsAndSegments","segments","si","pi","segmentIndex","partIndex","getLastParts","lastSegment","getKnownPartCount","preloadSegment","partCount","count","hint","liveEdgeDelay","master","endList","suggestedPresentationDelay","hasParts","serverControl","partHoldBack","holdBack","targetDuration","intervalDuration","endSequence","expired","mediaSequence","backward","precise","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","startIndex","endIndex","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","playlists","currentBandwidth","BANDWIDTH","MAX_VALUE","playlistMatch","resolvedUri","someAudioVariant","AUDIO","mediaGroups","groupName","isAudioOnly","variant","CODECS","_ret","Playlist","getMediaInfoForTime","_ref4","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","createPlaylistID","groupID","group","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","createGroupID","phonyUri","audioOnlyMaster","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skip","skippedSegments","offset","oldSegments","newSegments","currentMap","oldSegment","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","parameters","canBlockReload","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","canSkipDateranges","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","responseText","startingState","parseManifest_","onwarn","oninfo","manifestString","_ref$customTagParsers","_ref$customTagMappers","customParser","addParser","mapper","addTagMapper","manifest","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","onreadystatechange","abort","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseType","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","byterange","Range","textRange","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","step","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","dashPlaylistUnchanged","sidx","aSegment","bSegment","aByterange","bByterange","dashGroupId","NAME","updateMaster","oldMaster","newMaster","sidxMapping","noChanges","minimumUpdatePeriod","timelineStarts","sidxKey","playlistUpdate","_playlistUpdate","removeOldMediaGroupLabels","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","fin","subarray","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","beforeSend","overrideMimeType","total","loaded","containerRequest","container","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","masterXml","clientOffset","previousManifest","manifestUri","location","locations","mpl","mup","createMUPTimeout_","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","URL","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","Stream","init","pipe","destination","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","stream","MAX_UINT32$1","pow","numbers","getUint64","uint8","dv","DataView","getBigUint64","MAX_SAFE_INTEGER","getUint32","MAX_UINT32","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","Uint8Array","charCodeAt","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","view","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","ONE_SECOND_IN_TS$4","timestamp","sampleRate","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","captionServices","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","newLine","beforeRowOverflow","isEmpty","addText","backspace","row","substr","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","win","setCurrentWindow","TextDecoder","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","service","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","byteIndex","flushDisplayed","_char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","decode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","reference","direction","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","decodeURIComponent","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","unescape","privateData","tagSize","bufferSize","dispatchType","chunk","frameStart","frameSize","dataAlignmentIndicator","d","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","fragment","trackId","pes","ptsDtsFlags","startPrefix","packetLength","codec","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","len","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","returnSize","getId3Offset","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","findBox","subresults","toUnsigned$1","getUint64$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","commonjsGlobal","globalThis","window","g","window_1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","BigInt","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","timescale","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","lowestTime","baseTime","scale","isFinite","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","ts","ONE_SECOND_IN_TS","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","console","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","segmentInfo","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","ArrayBuffer","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","objects","finishProcessingFn","errorObj","Uint32Array","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","_ref5","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","_ref6","decrypt","_ref7","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","iv","waitForCompletion","_ref9","didError","segmentFinish","_ref8","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecs","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","logFn","representationToString","representation","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","audioOnly","sortedPlaylistReps","RESOLUTION","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","timeline","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","currentTimeline","segmentTimeline","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","_error","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","oldPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","instreamId","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","tempBuffer","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char3","NoVttJsError","_Error","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","createCommonjsModule","basedir","module","exports","require","base","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","__esModule","setPrototypeOf","_setPrototypeOf","inheritsLoose","create","_length","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","_Stream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","isView","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","cause","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","mediaGroup","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","codecString","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","cueOut","_segment$cueOutCont$s","cueOutCont","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","frameRate","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","qualityLevels","selectedIndex_","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","contentProtection","keySystemsOptions","keySystemsObj","keySystem","keySystemOptions","pssh","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","mainPlaylist","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","option","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","masterPlaylist","_videojs$log","excludedHDPlaylists","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","simpleType","getOverrideNative","_options$vhs","_options$hls","defaultOverrideNative","_vhs$overrideNative","_hls$overrideNative"],"sourceRoot":""}